{
    "name": "prodvana",
    "displayName": "Prodvana",
    "description": "A Pulumi package for creating and managing Prodvana cloud resources.",
    "keywords": [
        "pulumi",
        "prodvana",
        "category/cloud",
        "category/infrastructure"
    ],
    "homepage": "https://prodvana.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`prodvana` Terraform Provider](https://github.com/prodvana/terraform-provider-prodvana).",
    "repository": "https://github.com/prodvana/pulumi-prodvana",
    "logoUrl": "https://raw.githubusercontent.com/prodvana/pulumi-prodvana/main/docs/prodvana-icon.svg",
    "pluginDownloadURL": "github://api.github.com/prodvana",
    "publisher": "Prodvana",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20"
        },
        "go": {
            "importBasePath": "github.com/prodvana/pulumi-prodvana/sdk/go/prodvana",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@prodvana/pulumi-prodvana",
            "packageDescription": "A Pulumi package for creating and managing Prodvana cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/prodvana/terraform-provider-prodvana)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-prodvana` repo](https://github.com/prodvana/pulumi-prodvana/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-prodvana` repo](https://github.com/prodvana/terraform-provider-prodvana/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/prodvana/terraform-provider-prodvana)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-prodvana` repo](https://github.com/prodvana/pulumi-prodvana/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-prodvana` repo](https://github.com/prodvana/terraform-provider-prodvana/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "An API token generated with permissions to this organization.\n",
                "defaultInfo": {
                    "environment": [
                        "PVN_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "orgSlug": {
                "type": "string",
                "description": "Prodvana organization to authenticate with (you can find this in your Org's url: \u003corg\u003e.prodvana.io)\n",
                "defaultInfo": {
                    "environment": [
                        "PVN_ORG_SLUG"
                    ]
                }
            }
        }
    },
    "types": {
        "prodvana:index/K8sRuntimeLabel:K8sRuntimeLabel": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label name\n"
                },
                "value": {
                    "type": "string",
                    "description": "Label value\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "prodvana:index/ManagedK8sRuntimeExec:ManagedK8sRuntimeExec": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "API version of the exec credential plugin\n"
                },
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Arguments to pass when executing the command\n"
                },
                "command": {
                    "type": "string",
                    "description": "Command to execute\n"
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Environment variables to set when executing the command\n"
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "command"
            ]
        },
        "prodvana:index/ManagedK8sRuntimeLabel:ManagedK8sRuntimeLabel": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label name\n"
                },
                "value": {
                    "type": "string",
                    "description": "Label value\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "prodvana:index/ReleaseChannelConstant:ReleaseChannelConstant": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "stringValue"
            ]
        },
        "prodvana:index/ReleaseChannelConvergenceProtection:ReleaseChannelConvergenceProtection": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionDeployment:ReleaseChannelConvergenceProtectionDeployment",
                    "description": "deployment lifecycle options\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the protection\n"
                },
                "postApproval": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionPostApproval:ReleaseChannelConvergenceProtectionPostApproval",
                    "description": "post-approval lifecycle options\n"
                },
                "postDeployment": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionPostDeployment:ReleaseChannelConvergenceProtectionPostDeployment",
                    "description": "post-deployment lifecycle options\n"
                },
                "preApproval": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionPreApproval:ReleaseChannelConvergenceProtectionPreApproval",
                    "description": "pre-approval lifecycle options\n"
                },
                "ref": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionRef:ReleaseChannelConvergenceProtectionRef",
                    "description": "reference to a protection stored in Prodvana\n"
                }
            },
            "type": "object",
            "required": [
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "ref"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionDeployment:ReleaseChannelConvergenceProtectionDeployment": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionPostApproval:ReleaseChannelConvergenceProtectionPostApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionPostDeployment:ReleaseChannelConvergenceProtectionPostDeployment": {
            "properties": {
                "checkDuration": {
                    "type": "string",
                    "description": "how long to keep checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "delayCheckDuration": {
                    "type": "string",
                    "description": "delay between the deployment completing and when this protection starts checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionPreApproval:ReleaseChannelConvergenceProtectionPreApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionRef:ReleaseChannelConvergenceProtectionRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionRefParameter:ReleaseChannelConvergenceProtectionRefParameter"
                    },
                    "description": "parameters to pass to the protection\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionRefParameter:ReleaseChannelConvergenceProtectionRefParameter": {
            "properties": {
                "dockerImageTagValue": {
                    "type": "string",
                    "description": "parameter docker image tag value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "parameter int value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "secretValue": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtectionRefParameterSecretValue:ReleaseChannelConvergenceProtectionRefParameterSecretValue",
                    "description": "parameter secret value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/ReleaseChannelConvergenceProtectionRefParameterSecretValue:ReleaseChannelConvergenceProtectionRefParameterSecretValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "version"
            ]
        },
        "prodvana:index/ReleaseChannelManualApprovalPrecondition:ReleaseChannelManualApprovalPrecondition": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the manual approval\n"
                },
                "everyAction": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "description": "name of the manual approval\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "everyAction",
                        "name"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelPolicy:ReleaseChannelPolicy": {
            "properties": {
                "defaultEnv": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelPolicyDefaultEnv:ReleaseChannelPolicyDefaultEnv"
                    },
                    "description": "default environment variables for services in this Release Channel\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/ReleaseChannelPolicyDefaultEnv:ReleaseChannelPolicyDefaultEnv": {
            "properties": {
                "kubernetesSecret": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelPolicyDefaultEnvKubernetesSecret:ReleaseChannelPolicyDefaultEnvKubernetesSecret",
                    "description": "Reference to a secret value stored in Kubernetes.\n"
                },
                "secret": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelPolicyDefaultEnvSecret:ReleaseChannelPolicyDefaultEnvSecret",
                    "description": "Reference to a secret value stored in Prodvana.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Non-sensitive environment variable value\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/ReleaseChannelPolicyDefaultEnvKubernetesSecret:ReleaseChannelPolicyDefaultEnvKubernetesSecret": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "secretName": {
                    "type": "string",
                    "description": "Name of the secret object\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/ReleaseChannelPolicyDefaultEnvSecret:ReleaseChannelPolicyDefaultEnvSecret": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/ReleaseChannelProtection:ReleaseChannelProtection": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelProtectionDeployment:ReleaseChannelProtectionDeployment",
                    "description": "deployment lifecycle options\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the protection\n"
                },
                "postApproval": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelProtectionPostApproval:ReleaseChannelProtectionPostApproval",
                    "description": "post-approval lifecycle options\n"
                },
                "postDeployment": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelProtectionPostDeployment:ReleaseChannelProtectionPostDeployment",
                    "description": "post-deployment lifecycle options\n"
                },
                "preApproval": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelProtectionPreApproval:ReleaseChannelProtectionPreApproval",
                    "description": "pre-approval lifecycle options\n"
                },
                "ref": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelProtectionRef:ReleaseChannelProtectionRef",
                    "description": "reference to a protection stored in Prodvana\n"
                }
            },
            "type": "object",
            "required": [
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "ref"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelProtectionDeployment:ReleaseChannelProtectionDeployment": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelProtectionPostApproval:ReleaseChannelProtectionPostApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelProtectionPostDeployment:ReleaseChannelProtectionPostDeployment": {
            "properties": {
                "checkDuration": {
                    "type": "string",
                    "description": "how long to keep checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "delayCheckDuration": {
                    "type": "string",
                    "description": "delay between the deployment completing and when this protection starts checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelProtectionPreApproval:ReleaseChannelProtectionPreApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelProtectionRef:ReleaseChannelProtectionRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelProtectionRefParameter:ReleaseChannelProtectionRefParameter"
                    },
                    "description": "parameters to pass to the protection\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/ReleaseChannelProtectionRefParameter:ReleaseChannelProtectionRefParameter": {
            "properties": {
                "dockerImageTagValue": {
                    "type": "string",
                    "description": "parameter docker image tag value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "parameter int value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "secretValue": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelProtectionRefParameterSecretValue:ReleaseChannelProtectionRefParameterSecretValue",
                    "description": "parameter secret value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/ReleaseChannelProtectionRefParameterSecretValue:ReleaseChannelProtectionRefParameterSecretValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "version"
            ]
        },
        "prodvana:index/ReleaseChannelReleaseChannelStablePrecondition:ReleaseChannelReleaseChannelStablePrecondition": {
            "properties": {
                "releaseChannel": {
                    "type": "string",
                    "description": "name of a release channel that must be in a stable deployment state\n"
                }
            },
            "type": "object",
            "required": [
                "releaseChannel"
            ]
        },
        "prodvana:index/ReleaseChannelRuntime:ReleaseChannelRuntime": {
            "properties": {
                "ecsPrefix": {
                    "type": "string",
                    "description": "Prefix used when naming ECS resources. Can only be set on an ECS Runtime.\n"
                },
                "k8sNamespace": {
                    "type": "string",
                    "description": "Optionally set a custom namespace. If not set, Prodvana will create and manage the namespace. If set, the namespace *must* already exist and Prodvana will not try to create or delete it. Can only be set on a Kubernetes Runtime.\n"
                },
                "name": {
                    "type": "string",
                    "description": "optional identifier for this runtime connection within this release channel\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "name of the a runtime\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the runtime connection, one of (AWS*ECS, EXTENSION, GOOGLE*CLOUD*RUN, LONG*LIVED*COMPUTE, UNKNOWN*CONNECTION)\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ecsPrefix",
                        "k8sNamespace",
                        "name",
                        "type"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtection:ReleaseChannelServiceInstanceProtection": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionDeployment:ReleaseChannelServiceInstanceProtectionDeployment",
                    "description": "deployment lifecycle options\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the protection\n"
                },
                "postApproval": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionPostApproval:ReleaseChannelServiceInstanceProtectionPostApproval",
                    "description": "post-approval lifecycle options\n"
                },
                "postDeployment": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionPostDeployment:ReleaseChannelServiceInstanceProtectionPostDeployment",
                    "description": "post-deployment lifecycle options\n"
                },
                "preApproval": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionPreApproval:ReleaseChannelServiceInstanceProtectionPreApproval",
                    "description": "pre-approval lifecycle options\n"
                },
                "ref": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionRef:ReleaseChannelServiceInstanceProtectionRef",
                    "description": "reference to a protection stored in Prodvana\n"
                }
            },
            "type": "object",
            "required": [
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "ref"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionDeployment:ReleaseChannelServiceInstanceProtectionDeployment": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionPostApproval:ReleaseChannelServiceInstanceProtectionPostApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionPostDeployment:ReleaseChannelServiceInstanceProtectionPostDeployment": {
            "properties": {
                "checkDuration": {
                    "type": "string",
                    "description": "how long to keep checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "delayCheckDuration": {
                    "type": "string",
                    "description": "delay between the deployment completing and when this protection starts checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionPreApproval:ReleaseChannelServiceInstanceProtectionPreApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionRef:ReleaseChannelServiceInstanceProtectionRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionRefParameter:ReleaseChannelServiceInstanceProtectionRefParameter"
                    },
                    "description": "parameters to pass to the protection\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionRefParameter:ReleaseChannelServiceInstanceProtectionRefParameter": {
            "properties": {
                "dockerImageTagValue": {
                    "type": "string",
                    "description": "parameter docker image tag value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "parameter int value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "secretValue": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtectionRefParameterSecretValue:ReleaseChannelServiceInstanceProtectionRefParameterSecretValue",
                    "description": "parameter secret value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/ReleaseChannelServiceInstanceProtectionRefParameterSecretValue:ReleaseChannelServiceInstanceProtectionRefParameterSecretValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "version"
            ]
        },
        "prodvana:index/ReleaseChannelSharedManualApprovalPrecondition:ReleaseChannelSharedManualApprovalPrecondition": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the manual approval\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name"
                    ]
                }
            }
        },
        "prodvana:index/getK8sRuntimeLabel:getK8sRuntimeLabel": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label name\n"
                },
                "value": {
                    "type": "string",
                    "description": "Label value\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "prodvana:index/getReleaseChannelConstant:getReleaseChannelConstant": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "stringValue"
            ]
        },
        "prodvana:index/getReleaseChannelConvergenceProtection:getReleaseChannelConvergenceProtection": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionDeployment:getReleaseChannelConvergenceProtectionDeployment",
                    "description": "deployment lifecycle options\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the protection\n"
                },
                "postApproval": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionPostApproval:getReleaseChannelConvergenceProtectionPostApproval",
                    "description": "post-approval lifecycle options\n"
                },
                "postDeployment": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionPostDeployment:getReleaseChannelConvergenceProtectionPostDeployment",
                    "description": "post-deployment lifecycle options\n"
                },
                "preApproval": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionPreApproval:getReleaseChannelConvergenceProtectionPreApproval",
                    "description": "pre-approval lifecycle options\n"
                },
                "ref": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionRef:getReleaseChannelConvergenceProtectionRef",
                    "description": "reference to a protection stored in Prodvana\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "ref"
                    ]
                }
            }
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionDeployment:getReleaseChannelConvergenceProtectionDeployment": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionPostApproval:getReleaseChannelConvergenceProtectionPostApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionPostDeployment:getReleaseChannelConvergenceProtectionPostDeployment": {
            "properties": {
                "checkDuration": {
                    "type": "string",
                    "description": "how long to keep checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "delayCheckDuration": {
                    "type": "string",
                    "description": "delay between the deployment completing and when this protection starts checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionPreApproval:getReleaseChannelConvergenceProtectionPreApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionRef:getReleaseChannelConvergenceProtectionRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionRefParameter:getReleaseChannelConvergenceProtectionRefParameter"
                    },
                    "description": "parameters to pass to the protection\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionRefParameter:getReleaseChannelConvergenceProtectionRefParameter": {
            "properties": {
                "dockerImageTagValue": {
                    "type": "string",
                    "description": "parameter docker image tag value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "parameter int value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "secretValue": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtectionRefParameterSecretValue:getReleaseChannelConvergenceProtectionRefParameterSecretValue",
                    "description": "parameter secret value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelConvergenceProtectionRefParameterSecretValue:getReleaseChannelConvergenceProtectionRefParameterSecretValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "version"
            ]
        },
        "prodvana:index/getReleaseChannelManualApprovalPrecondition:getReleaseChannelManualApprovalPrecondition": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the manual approval\n"
                },
                "everyAction": {
                    "type": "boolean",
                    "description": "whether to require manual approval for every action, or just the first\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the manual approval\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelPolicy:getReleaseChannelPolicy": {
            "properties": {
                "defaultEnv": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/prodvana:index/getReleaseChannelPolicyDefaultEnv:getReleaseChannelPolicyDefaultEnv"
                    },
                    "description": "default environment variables for services in this Release Channel\n"
                }
            },
            "type": "object",
            "required": [
                "defaultEnv"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelPolicyDefaultEnv:getReleaseChannelPolicyDefaultEnv": {
            "properties": {
                "kubernetesSecret": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelPolicyDefaultEnvKubernetesSecret:getReleaseChannelPolicyDefaultEnvKubernetesSecret",
                    "description": "Reference to a secret value stored in Kubernetes.\n"
                },
                "secret": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelPolicyDefaultEnvSecret:getReleaseChannelPolicyDefaultEnvSecret",
                    "description": "Reference to a secret value stored in Prodvana.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Non-sensitive environment variable value\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/getReleaseChannelPolicyDefaultEnvKubernetesSecret:getReleaseChannelPolicyDefaultEnvKubernetesSecret": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "secretName": {
                    "type": "string",
                    "description": "Name of the secret object\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/getReleaseChannelPolicyDefaultEnvSecret:getReleaseChannelPolicyDefaultEnvSecret": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object"
        },
        "prodvana:index/getReleaseChannelProtection:getReleaseChannelProtection": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelProtectionDeployment:getReleaseChannelProtectionDeployment",
                    "description": "deployment lifecycle options\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the protection\n"
                },
                "postApproval": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelProtectionPostApproval:getReleaseChannelProtectionPostApproval",
                    "description": "post-approval lifecycle options\n"
                },
                "postDeployment": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelProtectionPostDeployment:getReleaseChannelProtectionPostDeployment",
                    "description": "post-deployment lifecycle options\n"
                },
                "preApproval": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelProtectionPreApproval:getReleaseChannelProtectionPreApproval",
                    "description": "pre-approval lifecycle options\n"
                },
                "ref": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelProtectionRef:getReleaseChannelProtectionRef",
                    "description": "reference to a protection stored in Prodvana\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "ref"
                    ]
                }
            }
        },
        "prodvana:index/getReleaseChannelProtectionDeployment:getReleaseChannelProtectionDeployment": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelProtectionPostApproval:getReleaseChannelProtectionPostApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelProtectionPostDeployment:getReleaseChannelProtectionPostDeployment": {
            "properties": {
                "checkDuration": {
                    "type": "string",
                    "description": "how long to keep checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "delayCheckDuration": {
                    "type": "string",
                    "description": "delay between the deployment completing and when this protection starts checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelProtectionPreApproval:getReleaseChannelProtectionPreApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelProtectionRef:getReleaseChannelProtectionRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/getReleaseChannelProtectionRefParameter:getReleaseChannelProtectionRefParameter"
                    },
                    "description": "parameters to pass to the protection\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelProtectionRefParameter:getReleaseChannelProtectionRefParameter": {
            "properties": {
                "dockerImageTagValue": {
                    "type": "string",
                    "description": "parameter docker image tag value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "parameter int value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "secretValue": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelProtectionRefParameterSecretValue:getReleaseChannelProtectionRefParameterSecretValue",
                    "description": "parameter secret value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelProtectionRefParameterSecretValue:getReleaseChannelProtectionRefParameterSecretValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "version"
            ]
        },
        "prodvana:index/getReleaseChannelReleaseChannelStablePrecondition:getReleaseChannelReleaseChannelStablePrecondition": {
            "properties": {
                "releaseChannel": {
                    "type": "string",
                    "description": "name of a release channel that must be in a stable deployment state\n"
                }
            },
            "type": "object",
            "required": [
                "releaseChannel"
            ]
        },
        "prodvana:index/getReleaseChannelRuntime:getReleaseChannelRuntime": {
            "properties": {
                "ecsPrefix": {
                    "type": "string",
                    "description": "ECS prefix\n"
                },
                "k8sNamespace": {
                    "type": "string",
                    "description": "Kubernetes namespace\n"
                },
                "name": {
                    "type": "string",
                    "description": "optional identifier for this runtime connection within this release channel\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "name of the a runtime\n"
                },
                "type": {
                    "type": "string",
                    "description": "type of the runtime connection, one of (AWS*ECS, EXTENSION, GOOGLE*CLOUD*RUN, LONG*LIVED*COMPUTE, UNKNOWN*CONNECTION)\n"
                }
            },
            "type": "object",
            "required": [
                "ecsPrefix",
                "k8sNamespace",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtection:getReleaseChannelServiceInstanceProtection": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionDeployment:getReleaseChannelServiceInstanceProtectionDeployment",
                    "description": "deployment lifecycle options\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the protection\n"
                },
                "postApproval": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionPostApproval:getReleaseChannelServiceInstanceProtectionPostApproval",
                    "description": "post-approval lifecycle options\n"
                },
                "postDeployment": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionPostDeployment:getReleaseChannelServiceInstanceProtectionPostDeployment",
                    "description": "post-deployment lifecycle options\n"
                },
                "preApproval": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionPreApproval:getReleaseChannelServiceInstanceProtectionPreApproval",
                    "description": "pre-approval lifecycle options\n"
                },
                "ref": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionRef:getReleaseChannelServiceInstanceProtectionRef",
                    "description": "reference to a protection stored in Prodvana\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": [
                        "ref"
                    ]
                }
            }
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionDeployment:getReleaseChannelServiceInstanceProtectionDeployment": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionPostApproval:getReleaseChannelServiceInstanceProtectionPostApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionPostDeployment:getReleaseChannelServiceInstanceProtectionPostDeployment": {
            "properties": {
                "checkDuration": {
                    "type": "string",
                    "description": "how long to keep checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "delayCheckDuration": {
                    "type": "string",
                    "description": "delay between the deployment completing and when this protection starts checking. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionPreApproval:getReleaseChannelServiceInstanceProtectionPreApproval": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "whether to enable deployment lifecycle options\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionRef:getReleaseChannelServiceInstanceProtectionRef": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionRefParameter:getReleaseChannelServiceInstanceProtectionRefParameter"
                    },
                    "description": "parameters to pass to the protection\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionRefParameter:getReleaseChannelServiceInstanceProtectionRefParameter": {
            "properties": {
                "dockerImageTagValue": {
                    "type": "string",
                    "description": "parameter docker image tag value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "intValue": {
                    "type": "integer",
                    "description": "parameter int value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "secretValue": {
                    "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtectionRefParameterSecretValue:getReleaseChannelServiceInstanceProtectionRefParameterSecretValue",
                    "description": "parameter secret value, only one of (string*value, int*value, docker*image*tag*value, secret*value) can be set\n"
                },
                "stringValue": {
                    "type": "string",
                    "description": "string value of the constant\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "prodvana:index/getReleaseChannelServiceInstanceProtectionRefParameterSecretValue:getReleaseChannelServiceInstanceProtectionRefParameterSecretValue": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Name of the secret.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "version"
            ]
        },
        "prodvana:index/getReleaseChannelSharedManualApprovalPrecondition:getReleaseChannelSharedManualApprovalPrecondition": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the manual approval\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the prodvana package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "An API token generated with permissions to this organization.\n",
                "secret": true
            },
            "orgSlug": {
                "type": "string",
                "description": "Prodvana organization to authenticate with (you can find this in your Org's url: \u003corg\u003e.prodvana.io)\n"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "An API token generated with permissions to this organization.\n",
                "defaultInfo": {
                    "environment": [
                        "PVN_API_TOKEN"
                    ]
                },
                "secret": true
            },
            "orgSlug": {
                "type": "string",
                "description": "Prodvana organization to authenticate with (you can find this in your Org's url: \u003corg\u003e.prodvana.io)\n",
                "defaultInfo": {
                    "environment": [
                        "PVN_ORG_SLUG"
                    ]
                }
            }
        }
    },
    "resources": {
        "prodvana:index/application:Application": {
            "description": "This resource allows you to manage a Prodvana [Application](https://docs.prodvana.io/docs/prodvana-concepts#application).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prodvana from \"@prodvana/pulumi-prodvana\";\n\nconst example = new prodvana.Application(\"example\", {});\n```\n```python\nimport pulumi\nimport pulumi_prodvana as prodvana\n\nexample = prodvana.Application(\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prodvana = Pulumi.Prodvana;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prodvana.Application(\"example\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := prodvana.NewApplication(ctx, \"example\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.Application;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Application(\"example\");\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prodvana:Application\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import prodvana:index/application:Application example \u003capplication name\u003e\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Application name\n"
                },
                "version": {
                    "type": "string",
                    "description": "Current application version\n"
                }
            },
            "required": [
                "name",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Application name\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Application name\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Current application version\n"
                    }
                },
                "type": "object"
            }
        },
        "prodvana:index/k8sRuntime:K8sRuntime": {
            "description": "This resource allows you to manage a Prodvana Kubernetes [Runtime](https://docs.prodvana.io/docs/prodvana-concepts#runtime). You are responsible for managing the agent lifetime. Also see `prodvana.ManagedK8sRuntime`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prodvana from \"@prodvana/pulumi-prodvana\";\n\nconst example = new prodvana.K8sRuntime(\"example\", {labels: [\n    {\n        label: \"env\",\n        value: \"staging\",\n    },\n    {\n        label: \"region\",\n        value: \"us-central1\",\n    },\n]});\n```\n```python\nimport pulumi\nimport pulumi_prodvana as prodvana\n\nexample = prodvana.K8sRuntime(\"example\", labels=[\n    prodvana.K8sRuntimeLabelArgs(\n        label=\"env\",\n        value=\"staging\",\n    ),\n    prodvana.K8sRuntimeLabelArgs(\n        label=\"region\",\n        value=\"us-central1\",\n    ),\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prodvana = Pulumi.Prodvana;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prodvana.K8sRuntime(\"example\", new()\n    {\n        Labels = new[]\n        {\n            new Prodvana.Inputs.K8sRuntimeLabelArgs\n            {\n                Label = \"env\",\n                Value = \"staging\",\n            },\n            new Prodvana.Inputs.K8sRuntimeLabelArgs\n            {\n                Label = \"region\",\n                Value = \"us-central1\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := prodvana.NewK8sRuntime(ctx, \"example\", \u0026prodvana.K8sRuntimeArgs{\n\t\t\tLabels: prodvana.K8sRuntimeLabelArray{\n\t\t\t\t\u0026prodvana.K8sRuntimeLabelArgs{\n\t\t\t\t\tLabel: pulumi.String(\"env\"),\n\t\t\t\t\tValue: pulumi.String(\"staging\"),\n\t\t\t\t},\n\t\t\t\t\u0026prodvana.K8sRuntimeLabelArgs{\n\t\t\t\t\tLabel: pulumi.String(\"region\"),\n\t\t\t\t\tValue: pulumi.String(\"us-central1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.K8sRuntime;\nimport com.pulumi.prodvana.K8sRuntimeArgs;\nimport com.pulumi.prodvana.inputs.K8sRuntimeLabelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new K8sRuntime(\"example\", K8sRuntimeArgs.builder()        \n            .labels(            \n                K8sRuntimeLabelArgs.builder()\n                    .label(\"env\")\n                    .value(\"staging\")\n                    .build(),\n                K8sRuntimeLabelArgs.builder()\n                    .label(\"region\")\n                    .value(\"us-central1\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prodvana:K8sRuntime\n    properties:\n      labels:\n        - label: env\n          value: staging\n        - label: region\n          value: us-central1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import prodvana:index/k8sRuntime:K8sRuntime example \u003cruntime name\u003e\n```\n\n ",
            "properties": {
                "agentApiToken": {
                    "type": "string",
                    "description": "API Token used for linking the Kubernetes Prodvana agent\n",
                    "secret": true
                },
                "agentArgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Arguments to pass to the Kubernetes Prodvana agent container.\n",
                    "secret": true
                },
                "agentImage": {
                    "type": "string",
                    "description": "URL of the Kubernetes Prodvana agent container image.\n"
                },
                "agentUrl": {
                    "type": "string",
                    "description": "URL of the Kubernetes Prodvana agent server\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/K8sRuntimeLabel:K8sRuntimeLabel"
                    },
                    "description": "List of labels to apply to the runtime\n"
                },
                "name": {
                    "type": "string",
                    "description": "Runtime name\n"
                }
            },
            "required": [
                "agentApiToken",
                "agentArgs",
                "agentImage",
                "agentUrl",
                "labels",
                "name"
            ],
            "inputProperties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/K8sRuntimeLabel:K8sRuntimeLabel"
                    },
                    "description": "List of labels to apply to the runtime\n"
                },
                "name": {
                    "type": "string",
                    "description": "Runtime name\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering K8sRuntime resources.\n",
                "properties": {
                    "agentApiToken": {
                        "type": "string",
                        "description": "API Token used for linking the Kubernetes Prodvana agent\n",
                        "secret": true
                    },
                    "agentArgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Arguments to pass to the Kubernetes Prodvana agent container.\n",
                        "secret": true
                    },
                    "agentImage": {
                        "type": "string",
                        "description": "URL of the Kubernetes Prodvana agent container image.\n"
                    },
                    "agentUrl": {
                        "type": "string",
                        "description": "URL of the Kubernetes Prodvana agent server\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/K8sRuntimeLabel:K8sRuntimeLabel"
                        },
                        "description": "List of labels to apply to the runtime\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Runtime name\n"
                    }
                },
                "type": "object"
            }
        },
        "prodvana:index/managedK8sRuntime:ManagedK8sRuntime": {
            "properties": {
                "agentEnv": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Environment variables to pass to the agent. Useful for cases like passing proxy configuration to the agent if needed.\n"
                },
                "agentExternallyManaged": {
                    "type": "boolean",
                    "description": "If the agent has been set to be externally managed. This should be false since this is the managed*k8s*runtime resource -- this is used to detect out of band changes to the agent deployment\n"
                },
                "agentNamespace": {
                    "type": "string",
                    "description": "The namespace of the agent\n"
                },
                "agentRuntimeId": {
                    "type": "string",
                    "description": "The runtime identifier of the agent\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "PEM-encoded client certificate for TLS authentication.\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "PEM-encoded client certificate key for TLS authentication.\n"
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "PEM-encoded root certificates bundle for TLS authentication.\n"
                },
                "configContext": {
                    "type": "string",
                    "description": "Context to use from the kube config file.\n"
                },
                "configContextAuthInfo": {
                    "type": "string",
                    "description": "Authentication info context of the kube config (name of the kubeconfig user, `--user` flag in `kubectl`).\n"
                },
                "configContextCluster": {
                    "type": "string",
                    "description": "Cluster context of the kube config (name of the kubeconfig cluster, `--cluster` flag in `kubectl`).\n"
                },
                "configPath": {
                    "type": "string",
                    "description": "Path to the kube config file.\n"
                },
                "configPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of paths to kube config files.\n"
                },
                "exec": {
                    "$ref": "#/types/prodvana:index/ManagedK8sRuntimeExec:ManagedK8sRuntimeExec",
                    "description": "Exec configuration for authentication to the Kubernetes cluster\n"
                },
                "host": {
                    "type": "string",
                    "description": "The address of the Kubernetes cluster (scheme://hostname:port)\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Whether server should be accessed without verifying the TLS certificate\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ManagedK8sRuntimeLabel:ManagedK8sRuntimeLabel"
                    },
                    "description": "List of labels to apply to the runtime\n"
                },
                "name": {
                    "type": "string",
                    "description": "Runtime name\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for basic authentication to the Kubernetes cluster\n"
                },
                "proxyUrl": {
                    "type": "string",
                    "description": "Proxy URL to use when accessing the Kubernetes cluster\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "tlsServerName": {
                    "type": "string",
                    "description": "Server name passed to the server for SNI and is used in the client to check server certificates against\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token to authenticate an service account\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for basic authentication to the Kubernetes cluster\n"
                }
            },
            "required": [
                "agentEnv",
                "agentExternallyManaged",
                "agentNamespace",
                "agentRuntimeId",
                "clientCertificate",
                "clientKey",
                "clusterCaCertificate",
                "configContext",
                "configContextAuthInfo",
                "configContextCluster",
                "configPath",
                "configPaths",
                "host",
                "insecure",
                "labels",
                "name",
                "password",
                "proxyUrl",
                "timeout",
                "tlsServerName",
                "token",
                "username"
            ],
            "inputProperties": {
                "agentEnv": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Environment variables to pass to the agent. Useful for cases like passing proxy configuration to the agent if needed.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "PEM-encoded client certificate for TLS authentication.\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "PEM-encoded client certificate key for TLS authentication.\n"
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "PEM-encoded root certificates bundle for TLS authentication.\n"
                },
                "configContext": {
                    "type": "string",
                    "description": "Context to use from the kube config file.\n"
                },
                "configContextAuthInfo": {
                    "type": "string",
                    "description": "Authentication info context of the kube config (name of the kubeconfig user, `--user` flag in `kubectl`).\n"
                },
                "configContextCluster": {
                    "type": "string",
                    "description": "Cluster context of the kube config (name of the kubeconfig cluster, `--cluster` flag in `kubectl`).\n"
                },
                "configPath": {
                    "type": "string",
                    "description": "Path to the kube config file.\n"
                },
                "configPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of paths to kube config files.\n"
                },
                "exec": {
                    "$ref": "#/types/prodvana:index/ManagedK8sRuntimeExec:ManagedK8sRuntimeExec",
                    "description": "Exec configuration for authentication to the Kubernetes cluster\n"
                },
                "host": {
                    "type": "string",
                    "description": "The address of the Kubernetes cluster (scheme://hostname:port)\n"
                },
                "insecure": {
                    "type": "boolean",
                    "description": "Whether server should be accessed without verifying the TLS certificate\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ManagedK8sRuntimeLabel:ManagedK8sRuntimeLabel"
                    },
                    "description": "List of labels to apply to the runtime\n"
                },
                "name": {
                    "type": "string",
                    "description": "Runtime name\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for basic authentication to the Kubernetes cluster\n"
                },
                "proxyUrl": {
                    "type": "string",
                    "description": "Proxy URL to use when accessing the Kubernetes cluster\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                },
                "tlsServerName": {
                    "type": "string",
                    "description": "Server name passed to the server for SNI and is used in the client to check server certificates against\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token to authenticate an service account\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username for basic authentication to the Kubernetes cluster\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedK8sRuntime resources.\n",
                "properties": {
                    "agentEnv": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Environment variables to pass to the agent. Useful for cases like passing proxy configuration to the agent if needed.\n"
                    },
                    "agentExternallyManaged": {
                        "type": "boolean",
                        "description": "If the agent has been set to be externally managed. This should be false since this is the managed*k8s*runtime resource -- this is used to detect out of band changes to the agent deployment\n"
                    },
                    "agentNamespace": {
                        "type": "string",
                        "description": "The namespace of the agent\n"
                    },
                    "agentRuntimeId": {
                        "type": "string",
                        "description": "The runtime identifier of the agent\n"
                    },
                    "clientCertificate": {
                        "type": "string",
                        "description": "PEM-encoded client certificate for TLS authentication.\n"
                    },
                    "clientKey": {
                        "type": "string",
                        "description": "PEM-encoded client certificate key for TLS authentication.\n"
                    },
                    "clusterCaCertificate": {
                        "type": "string",
                        "description": "PEM-encoded root certificates bundle for TLS authentication.\n"
                    },
                    "configContext": {
                        "type": "string",
                        "description": "Context to use from the kube config file.\n"
                    },
                    "configContextAuthInfo": {
                        "type": "string",
                        "description": "Authentication info context of the kube config (name of the kubeconfig user, `--user` flag in `kubectl`).\n"
                    },
                    "configContextCluster": {
                        "type": "string",
                        "description": "Cluster context of the kube config (name of the kubeconfig cluster, `--cluster` flag in `kubectl`).\n"
                    },
                    "configPath": {
                        "type": "string",
                        "description": "Path to the kube config file.\n"
                    },
                    "configPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of paths to kube config files.\n"
                    },
                    "exec": {
                        "$ref": "#/types/prodvana:index/ManagedK8sRuntimeExec:ManagedK8sRuntimeExec",
                        "description": "Exec configuration for authentication to the Kubernetes cluster\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "The address of the Kubernetes cluster (scheme://hostname:port)\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Whether server should be accessed without verifying the TLS certificate\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ManagedK8sRuntimeLabel:ManagedK8sRuntimeLabel"
                        },
                        "description": "List of labels to apply to the runtime\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Runtime name\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for basic authentication to the Kubernetes cluster\n"
                    },
                    "proxyUrl": {
                        "type": "string",
                        "description": "Proxy URL to use when accessing the Kubernetes cluster\n"
                    },
                    "timeout": {
                        "type": "string",
                        "description": "How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                    },
                    "tlsServerName": {
                        "type": "string",
                        "description": "Server name passed to the server for SNI and is used in the client to check server certificates against\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token to authenticate an service account\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username for basic authentication to the Kubernetes cluster\n"
                    }
                },
                "type": "object"
            }
        },
        "prodvana:index/releaseChannel:ReleaseChannel": {
            "description": "This resource allows you to manage a Prodvana [Release Channel](https://docs.prodvana.io/docs/prodvana-concepts#release-channel).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nHere's a simple example that creates a release channel in an existing application:\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.ReleaseChannel;\nimport com.pulumi.prodvana.ReleaseChannelArgs;\nimport com.pulumi.prodvana.inputs.ReleaseChannelPolicyArgs;\nimport com.pulumi.prodvana.inputs.ReleaseChannelRuntimeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ReleaseChannel(\"example\", ReleaseChannelArgs.builder()        \n            .application(\"my-app\")\n            .policy(ReleaseChannelPolicyArgs.builder()\n                .default_env(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .build())\n            .runtimes(ReleaseChannelRuntimeArgs.builder()\n                .runtime(\"default\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prodvana:ReleaseChannel\n    properties:\n      application: my-app\n      policy:\n        default_env:\n          MYENVVAR:\n            - value: my value\n      runtimes:\n        - runtime: default\n```\n\nHere's an example of how to create an application and release channel in the same module:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prodvana from \"@prodvana/pulumi-prodvana\";\n\nconst app = new prodvana.Application(\"app\", {});\nconst staging = new prodvana.ReleaseChannel(\"staging\", {application: app.name});\nconst prod = new prodvana.ReleaseChannel(\"prod\", {application: app.name});\n```\n```python\nimport pulumi\nimport pulumi_prodvana as prodvana\n\napp = prodvana.Application(\"app\")\nstaging = prodvana.ReleaseChannel(\"staging\", application=app.name)\nprod = prodvana.ReleaseChannel(\"prod\", application=app.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prodvana = Pulumi.Prodvana;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var app = new Prodvana.Application(\"app\");\n\n    var staging = new Prodvana.ReleaseChannel(\"staging\", new()\n    {\n        Application = app.Name,\n    });\n\n    var prod = new Prodvana.ReleaseChannel(\"prod\", new()\n    {\n        Application = app.Name,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tapp, err := prodvana.NewApplication(ctx, \"app\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = prodvana.NewReleaseChannel(ctx, \"staging\", \u0026prodvana.ReleaseChannelArgs{\n\t\t\tApplication: app.Name,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = prodvana.NewReleaseChannel(ctx, \"prod\", \u0026prodvana.ReleaseChannelArgs{\n\t\t\tApplication: app.Name,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.Application;\nimport com.pulumi.prodvana.ReleaseChannel;\nimport com.pulumi.prodvana.ReleaseChannelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var app = new Application(\"app\");\n\n        var staging = new ReleaseChannel(\"staging\", ReleaseChannelArgs.builder()        \n            .application(app.name())\n            .build());\n\n        var prod = new ReleaseChannel(\"prod\", ReleaseChannelArgs.builder()        \n            .application(app.name())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  app:\n    type: prodvana:Application\n  staging:\n    type: prodvana:ReleaseChannel\n    properties:\n      application: ${app.name}\n  prod:\n    type: prodvana:ReleaseChannel\n    properties:\n      application: ${app.name}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import prodvana:index/releaseChannel:ReleaseChannel example \u003capplication name\u003e/\u003crelease channel name\u003e\n```\n\n ",
            "properties": {
                "application": {
                    "type": "string",
                    "description": "Name of the Application this Release Channel belongs to\n"
                },
                "constants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelConstant:ReleaseChannelConstant"
                    },
                    "description": "Constant values for this release channel\n"
                },
                "convergenceProtections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtection:ReleaseChannelConvergenceProtection"
                    },
                    "description": "Feature Coming Soon\n"
                },
                "disableAllProtections": {
                    "type": "boolean",
                    "description": "Disable all protections for this release channel\n"
                },
                "manualApprovalPreconditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelManualApprovalPrecondition:ReleaseChannelManualApprovalPrecondition"
                    },
                    "description": "Preconditions requiring manual approval before this release channel can be deployed\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "policy": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelPolicy:ReleaseChannelPolicy",
                    "description": "Release Channel policy applied to all services\n"
                },
                "protections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelProtection:ReleaseChannelProtection"
                    },
                    "description": "Protections applied this release channel\n"
                },
                "releaseChannelStablePreconditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelReleaseChannelStablePrecondition:ReleaseChannelReleaseChannelStablePrecondition"
                    },
                    "description": "Preconditions requiring other release channels to be stable before this release channel can be deployed\n"
                },
                "runtimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelRuntime:ReleaseChannelRuntime"
                    },
                    "description": "Release Channel policy applied to all services\n"
                },
                "serviceInstanceProtections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtection:ReleaseChannelServiceInstanceProtection"
                    },
                    "description": "Protections applied to service instances in this release channel\n"
                },
                "sharedManualApprovalPreconditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelSharedManualApprovalPrecondition:ReleaseChannelSharedManualApprovalPrecondition"
                    },
                    "description": "Preconditions requiring manual approval before this release channel can be deployed, shared across release channels\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the secret\n"
                }
            },
            "required": [
                "application",
                "disableAllProtections",
                "name",
                "runtimes",
                "version"
            ],
            "inputProperties": {
                "application": {
                    "type": "string",
                    "description": "Name of the Application this Release Channel belongs to\n"
                },
                "constants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelConstant:ReleaseChannelConstant"
                    },
                    "description": "Constant values for this release channel\n"
                },
                "convergenceProtections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtection:ReleaseChannelConvergenceProtection"
                    },
                    "description": "Feature Coming Soon\n"
                },
                "disableAllProtections": {
                    "type": "boolean",
                    "description": "Disable all protections for this release channel\n"
                },
                "manualApprovalPreconditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelManualApprovalPrecondition:ReleaseChannelManualApprovalPrecondition"
                    },
                    "description": "Preconditions requiring manual approval before this release channel can be deployed\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the constant\n"
                },
                "policy": {
                    "$ref": "#/types/prodvana:index/ReleaseChannelPolicy:ReleaseChannelPolicy",
                    "description": "Release Channel policy applied to all services\n"
                },
                "protections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelProtection:ReleaseChannelProtection"
                    },
                    "description": "Protections applied this release channel\n"
                },
                "releaseChannelStablePreconditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelReleaseChannelStablePrecondition:ReleaseChannelReleaseChannelStablePrecondition"
                    },
                    "description": "Preconditions requiring other release channels to be stable before this release channel can be deployed\n"
                },
                "runtimes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelRuntime:ReleaseChannelRuntime"
                    },
                    "description": "Release Channel policy applied to all services\n"
                },
                "serviceInstanceProtections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtection:ReleaseChannelServiceInstanceProtection"
                    },
                    "description": "Protections applied to service instances in this release channel\n"
                },
                "sharedManualApprovalPreconditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelSharedManualApprovalPrecondition:ReleaseChannelSharedManualApprovalPrecondition"
                    },
                    "description": "Preconditions requiring manual approval before this release channel can be deployed, shared across release channels\n"
                }
            },
            "requiredInputs": [
                "application",
                "runtimes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ReleaseChannel resources.\n",
                "properties": {
                    "application": {
                        "type": "string",
                        "description": "Name of the Application this Release Channel belongs to\n"
                    },
                    "constants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelConstant:ReleaseChannelConstant"
                        },
                        "description": "Constant values for this release channel\n"
                    },
                    "convergenceProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelConvergenceProtection:ReleaseChannelConvergenceProtection"
                        },
                        "description": "Feature Coming Soon\n"
                    },
                    "disableAllProtections": {
                        "type": "boolean",
                        "description": "Disable all protections for this release channel\n"
                    },
                    "manualApprovalPreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelManualApprovalPrecondition:ReleaseChannelManualApprovalPrecondition"
                        },
                        "description": "Preconditions requiring manual approval before this release channel can be deployed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the constant\n"
                    },
                    "policy": {
                        "$ref": "#/types/prodvana:index/ReleaseChannelPolicy:ReleaseChannelPolicy",
                        "description": "Release Channel policy applied to all services\n"
                    },
                    "protections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelProtection:ReleaseChannelProtection"
                        },
                        "description": "Protections applied this release channel\n"
                    },
                    "releaseChannelStablePreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelReleaseChannelStablePrecondition:ReleaseChannelReleaseChannelStablePrecondition"
                        },
                        "description": "Preconditions requiring other release channels to be stable before this release channel can be deployed\n"
                    },
                    "runtimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelRuntime:ReleaseChannelRuntime"
                        },
                        "description": "Release Channel policy applied to all services\n"
                    },
                    "serviceInstanceProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelServiceInstanceProtection:ReleaseChannelServiceInstanceProtection"
                        },
                        "description": "Protections applied to service instances in this release channel\n"
                    },
                    "sharedManualApprovalPreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/ReleaseChannelSharedManualApprovalPrecondition:ReleaseChannelSharedManualApprovalPrecondition"
                        },
                        "description": "Preconditions requiring manual approval before this release channel can be deployed, shared across release channels\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the secret\n"
                    }
                },
                "type": "object"
            }
        },
        "prodvana:index/runtimeLink:RuntimeLink": {
            "description": "(Alpha! This feature is still in progress.) \nA `runtime_link` resource represents a successfully linked runtime.\nThis is most useful for Kubernetes runtimes -- the agent must be installed and registered with the Prodvana service before the runtime can be used.\nPair this with an explicit `depends_on` block ensures that the runtime is ready before attempting to use it. See the example below.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.K8sRuntime;\nimport com.pulumi.kubernetes.kubernetes_namespace;\nimport com.pulumi.kubernetes.Kubernetes_namespaceArgs;\nimport com.pulumi.kubernetes.kubernetes_service_account;\nimport com.pulumi.kubernetes.Kubernetes_service_accountArgs;\nimport com.pulumi.kubernetes.kubernetes_cluster_role_binding;\nimport com.pulumi.kubernetes.Kubernetes_cluster_role_bindingArgs;\nimport com.pulumi.kubernetes.kubernetes_deployment;\nimport com.pulumi.kubernetes.Kubernetes_deploymentArgs;\nimport com.pulumi.prodvana.RuntimeLink;\nimport com.pulumi.prodvana.RuntimeLinkArgs;\nimport com.pulumi.prodvana.ReleaseChannel;\nimport com.pulumi.prodvana.ReleaseChannelArgs;\nimport com.pulumi.prodvana.inputs.ReleaseChannelRuntimeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleK8sRuntime = new K8sRuntime(\"exampleK8sRuntime\");\n\n        var prodvanakubernetes_namespace = new Kubernetes_namespace(\"prodvanakubernetes_namespace\", Kubernetes_namespaceArgs.builder()        \n            .metadata(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n        var prodvanakubernetes_service_account = new Kubernetes_service_account(\"prodvanakubernetes_service_account\", Kubernetes_service_accountArgs.builder()        \n            .metadata(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n        var prodvanakubernetes_cluster_role_binding = new Kubernetes_cluster_role_binding(\"prodvanakubernetes_cluster_role_binding\", Kubernetes_cluster_role_bindingArgs.builder()        \n            .metadata(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .roleRef(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .subject(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n        var agent = new Kubernetes_deployment(\"agent\", Kubernetes_deploymentArgs.builder()        \n            .metadata(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .spec(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n            .build());\n\n        var exampleRuntimeLink = new RuntimeLink(\"exampleRuntimeLink\", RuntimeLinkArgs.builder()        \n            .id(exampleK8sRuntime.id())\n            .build());\n\n        var exampleReleaseChannel = new ReleaseChannel(\"exampleReleaseChannel\", ReleaseChannelArgs.builder()        \n            .runtimes(ReleaseChannelRuntimeArgs.builder()\n                .runtime(exampleRuntimeLink.name())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # create the runtime placeholder in Prodvana\n  exampleK8sRuntime: # \u003c...Full Kubernetes setup elided...\u003e\n    type: prodvana:K8sRuntime\n  # deploy the Prodvana agent to the Kubernetes cluster\n  # NOTE: this is an example and may not be complete, see\n  # https://docs.prodvana.io for the latest agent configuration details\n  prodvanakubernetes_namespace:\n    type: kubernetes:kubernetes_namespace\n    properties:\n      metadata:\n        - name: prodvana\n  prodvanakubernetes_service_account:\n    type: kubernetes:kubernetes_service_account\n    properties:\n      metadata:\n        - name: prodvana\n          namespace: ${prodvanakubernetes_namespace.metadata[0].name}\n  prodvanakubernetes_cluster_role_binding:\n    type: kubernetes:kubernetes_cluster_role_binding\n    properties:\n      metadata:\n        - name: prodvana-access\n      roleRef:\n        - apiGroup: rbac.authorization.k8s.io\n          kind: ClusterRole\n          name: cluster-admin\n      subject:\n        - kind: ServiceAccount\n          name: prodvana\n          namespace: ${prodvanakubernetes_namespace.metadata[0].name}\n  agent:\n    type: kubernetes:kubernetes_deployment\n    properties:\n      metadata:\n        - name: prodvana-agent\n          namespace: ${prodvanakubernetes_namespace.metadata[0].name}\n      spec:\n        - replicas: 1\n          selector:\n            - matchLabels:\n                app: prodvana-agent\n          template:\n            - metadata:\n                - labels:\n                    app: prodvana-agent\n              spec:\n                - serviceAccountName: ${prodvanakubernetes_service_account.metadata[0].name}\n                  container:\n                    - name: agent\n                      image: ${resource.prodvana_k8s_runtime.cluster.agent_image}\n                      args: ${resource.prodvana_k8s_runtime.cluster.agent_args}\n  # this resource will complete only after the agent\n  # registers itself with the Prodvana API\n  exampleRuntimeLink:\n    type: prodvana:RuntimeLink\n    properties:\n      id: ${exampleK8sRuntime.id}\n  exampleReleaseChannel:\n    type: prodvana:ReleaseChannel\n    properties:\n      runtimes:\n        - runtime: ${exampleRuntimeLink.name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the runtime to wait for linking.\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                }
            },
            "required": [
                "name",
                "timeout"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the runtime to wait for linking.\n"
                },
                "timeout": {
                    "type": "string",
                    "description": "How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuntimeLink resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the runtime to wait for linking.\n"
                    },
                    "timeout": {
                        "type": "string",
                        "description": "How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "prodvana:index/getApplication:getApplication": {
            "description": "Prodvana Application\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prodvana from \"@pulumi/prodvana\";\n\nconst example = prodvana.getApplication({\n    name: \"my-app\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prodvana as prodvana\n\nexample = prodvana.get_application(name=\"my-app\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prodvana = Pulumi.Prodvana;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prodvana.GetApplication.Invoke(new()\n    {\n        Name = \"my-app\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := prodvana.LookupApplication(ctx, \u0026prodvana.LookupApplicationArgs{\n\t\t\tName: \"my-app\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.ProdvanaFunctions;\nimport com.pulumi.prodvana.inputs.GetApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ProdvanaFunctions.getApplication(GetApplicationArgs.builder()\n            .name(\"my-app\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prodvana:getApplication\n      Arguments:\n        name: my-app\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplication.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Application name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApplication.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Application identifier\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Current application version\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "version"
                ]
            }
        },
        "prodvana:index/getK8sRuntime:getK8sRuntime": {
            "description": "Prodvana Kubernetes Runtime\n",
            "inputs": {
                "description": "A collection of arguments for invoking getK8sRuntime.\n",
                "properties": {
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getK8sRuntimeLabel:getK8sRuntimeLabel"
                        },
                        "description": "List of labels to apply to the runtime\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Runtime name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getK8sRuntime.\n",
                "properties": {
                    "agentApiToken": {
                        "type": "string",
                        "description": "API Token used for linking the Kubernetes Prodvana agent\n",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Runtime identifier\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getK8sRuntimeLabel:getK8sRuntimeLabel"
                        },
                        "description": "List of labels to apply to the runtime\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Runtime name\n"
                    }
                },
                "type": "object",
                "required": [
                    "agentApiToken",
                    "id",
                    "labels",
                    "name"
                ]
            }
        },
        "prodvana:index/getReleaseChannel:getReleaseChannel": {
            "description": "Prodvana Release Channel\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prodvana from \"@pulumi/prodvana\";\n\nconst example = prodvana.getReleaseChannel({\n    application: \"my-app\",\n    name: \"my-rc\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prodvana as prodvana\n\nexample = prodvana.get_release_channel(application=\"my-app\",\n    name=\"my-rc\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prodvana = Pulumi.Prodvana;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prodvana.GetReleaseChannel.Invoke(new()\n    {\n        Application = \"my-app\",\n        Name = \"my-rc\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := prodvana.LookupReleaseChannel(ctx, \u0026prodvana.LookupReleaseChannelArgs{\n\t\t\tApplication: \"my-app\",\n\t\t\tName:        \"my-rc\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prodvana.ProdvanaFunctions;\nimport com.pulumi.prodvana.inputs.GetReleaseChannelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ProdvanaFunctions.getReleaseChannel(GetReleaseChannelArgs.builder()\n            .application(\"my-app\")\n            .name(\"my-rc\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prodvana:getReleaseChannel\n      Arguments:\n        application: my-app\n        name: my-rc\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getReleaseChannel.\n",
                "properties": {
                    "application": {
                        "type": "string",
                        "description": "Name of the Application this Release Channel belongs to\n"
                    },
                    "constants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelConstant:getReleaseChannelConstant"
                        },
                        "description": "Constant values for this release channel\n"
                    },
                    "convergenceProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtection:getReleaseChannelConvergenceProtection"
                        },
                        "description": "Feature Coming Soon\n"
                    },
                    "disableAllProtections": {
                        "type": "boolean",
                        "description": "Disable all protections for this release channel\n"
                    },
                    "manualApprovalPreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelManualApprovalPrecondition:getReleaseChannelManualApprovalPrecondition"
                        },
                        "description": "Preconditions requiring manual approval before this release channel can be deployed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the constant\n"
                    },
                    "policy": {
                        "$ref": "#/types/prodvana:index/getReleaseChannelPolicy:getReleaseChannelPolicy",
                        "description": "Release Channel policy applied to all services\n"
                    },
                    "protections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelProtection:getReleaseChannelProtection"
                        },
                        "description": "Protections applied this release channel\n"
                    },
                    "releaseChannelStablePreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelReleaseChannelStablePrecondition:getReleaseChannelReleaseChannelStablePrecondition"
                        },
                        "description": "Preconditions requiring other release channels to be stable before this release channel can be deployed\n"
                    },
                    "serviceInstanceProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtection:getReleaseChannelServiceInstanceProtection"
                        },
                        "description": "Protections applied to service instances in this release channel\n"
                    },
                    "sharedManualApprovalPreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelSharedManualApprovalPrecondition:getReleaseChannelSharedManualApprovalPrecondition"
                        },
                        "description": "Preconditions requiring manual approval before this release channel can be deployed, shared across release channels\n"
                    }
                },
                "type": "object",
                "required": [
                    "application",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getReleaseChannel.\n",
                "properties": {
                    "application": {
                        "type": "string",
                        "description": "Name of the Application this Release Channel belongs to\n"
                    },
                    "constants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelConstant:getReleaseChannelConstant"
                        },
                        "description": "Constant values for this release channel\n"
                    },
                    "convergenceProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelConvergenceProtection:getReleaseChannelConvergenceProtection"
                        },
                        "description": "Feature Coming Soon\n"
                    },
                    "disableAllProtections": {
                        "type": "boolean",
                        "description": "Disable all protections for this release channel\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Release channel identifier\n"
                    },
                    "manualApprovalPreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelManualApprovalPrecondition:getReleaseChannelManualApprovalPrecondition"
                        },
                        "description": "Preconditions requiring manual approval before this release channel can be deployed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Release Channel name\n"
                    },
                    "policy": {
                        "$ref": "#/types/prodvana:index/getReleaseChannelPolicy:getReleaseChannelPolicy",
                        "description": "Release Channel policy applied to all services\n"
                    },
                    "protections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelProtection:getReleaseChannelProtection"
                        },
                        "description": "Protections applied this release channel\n"
                    },
                    "releaseChannelStablePreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelReleaseChannelStablePrecondition:getReleaseChannelReleaseChannelStablePrecondition"
                        },
                        "description": "Preconditions requiring other release channels to be stable before this release channel can be deployed\n"
                    },
                    "runtimes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelRuntime:getReleaseChannelRuntime"
                        },
                        "description": "Release Channel policy applied to all services\n"
                    },
                    "serviceInstanceProtections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelServiceInstanceProtection:getReleaseChannelServiceInstanceProtection"
                        },
                        "description": "Protections applied to service instances in this release channel\n"
                    },
                    "sharedManualApprovalPreconditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prodvana:index/getReleaseChannelSharedManualApprovalPrecondition:getReleaseChannelSharedManualApprovalPrecondition"
                        },
                        "description": "Preconditions requiring manual approval before this release channel can be deployed, shared across release channels\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Current application version\n"
                    }
                },
                "type": "object",
                "required": [
                    "application",
                    "id",
                    "name",
                    "policy",
                    "runtimes",
                    "version"
                ]
            }
        }
    }
}