// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prodvana

import (
	"context"
	"reflect"

	"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ManagedK8sRuntimeExec struct {
	// API version of the exec credential plugin
	ApiVersion string `pulumi:"apiVersion"`
	// Arguments to pass when executing the command
	Args []string `pulumi:"args"`
	// Command to execute
	Command string `pulumi:"command"`
	// Environment variables to set when executing the command
	Env map[string]string `pulumi:"env"`
}

// ManagedK8sRuntimeExecInput is an input type that accepts ManagedK8sRuntimeExecArgs and ManagedK8sRuntimeExecOutput values.
// You can construct a concrete instance of `ManagedK8sRuntimeExecInput` via:
//
//	ManagedK8sRuntimeExecArgs{...}
type ManagedK8sRuntimeExecInput interface {
	pulumi.Input

	ToManagedK8sRuntimeExecOutput() ManagedK8sRuntimeExecOutput
	ToManagedK8sRuntimeExecOutputWithContext(context.Context) ManagedK8sRuntimeExecOutput
}

type ManagedK8sRuntimeExecArgs struct {
	// API version of the exec credential plugin
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	// Arguments to pass when executing the command
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Command to execute
	Command pulumi.StringInput `pulumi:"command"`
	// Environment variables to set when executing the command
	Env pulumi.StringMapInput `pulumi:"env"`
}

func (ManagedK8sRuntimeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedK8sRuntimeExec)(nil)).Elem()
}

func (i ManagedK8sRuntimeExecArgs) ToManagedK8sRuntimeExecOutput() ManagedK8sRuntimeExecOutput {
	return i.ToManagedK8sRuntimeExecOutputWithContext(context.Background())
}

func (i ManagedK8sRuntimeExecArgs) ToManagedK8sRuntimeExecOutputWithContext(ctx context.Context) ManagedK8sRuntimeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedK8sRuntimeExecOutput)
}

func (i ManagedK8sRuntimeExecArgs) ToManagedK8sRuntimeExecPtrOutput() ManagedK8sRuntimeExecPtrOutput {
	return i.ToManagedK8sRuntimeExecPtrOutputWithContext(context.Background())
}

func (i ManagedK8sRuntimeExecArgs) ToManagedK8sRuntimeExecPtrOutputWithContext(ctx context.Context) ManagedK8sRuntimeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedK8sRuntimeExecOutput).ToManagedK8sRuntimeExecPtrOutputWithContext(ctx)
}

// ManagedK8sRuntimeExecPtrInput is an input type that accepts ManagedK8sRuntimeExecArgs, ManagedK8sRuntimeExecPtr and ManagedK8sRuntimeExecPtrOutput values.
// You can construct a concrete instance of `ManagedK8sRuntimeExecPtrInput` via:
//
//	        ManagedK8sRuntimeExecArgs{...}
//
//	or:
//
//	        nil
type ManagedK8sRuntimeExecPtrInput interface {
	pulumi.Input

	ToManagedK8sRuntimeExecPtrOutput() ManagedK8sRuntimeExecPtrOutput
	ToManagedK8sRuntimeExecPtrOutputWithContext(context.Context) ManagedK8sRuntimeExecPtrOutput
}

type managedK8sRuntimeExecPtrType ManagedK8sRuntimeExecArgs

func ManagedK8sRuntimeExecPtr(v *ManagedK8sRuntimeExecArgs) ManagedK8sRuntimeExecPtrInput {
	return (*managedK8sRuntimeExecPtrType)(v)
}

func (*managedK8sRuntimeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedK8sRuntimeExec)(nil)).Elem()
}

func (i *managedK8sRuntimeExecPtrType) ToManagedK8sRuntimeExecPtrOutput() ManagedK8sRuntimeExecPtrOutput {
	return i.ToManagedK8sRuntimeExecPtrOutputWithContext(context.Background())
}

func (i *managedK8sRuntimeExecPtrType) ToManagedK8sRuntimeExecPtrOutputWithContext(ctx context.Context) ManagedK8sRuntimeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedK8sRuntimeExecPtrOutput)
}

type ManagedK8sRuntimeExecOutput struct{ *pulumi.OutputState }

func (ManagedK8sRuntimeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedK8sRuntimeExec)(nil)).Elem()
}

func (o ManagedK8sRuntimeExecOutput) ToManagedK8sRuntimeExecOutput() ManagedK8sRuntimeExecOutput {
	return o
}

func (o ManagedK8sRuntimeExecOutput) ToManagedK8sRuntimeExecOutputWithContext(ctx context.Context) ManagedK8sRuntimeExecOutput {
	return o
}

func (o ManagedK8sRuntimeExecOutput) ToManagedK8sRuntimeExecPtrOutput() ManagedK8sRuntimeExecPtrOutput {
	return o.ToManagedK8sRuntimeExecPtrOutputWithContext(context.Background())
}

func (o ManagedK8sRuntimeExecOutput) ToManagedK8sRuntimeExecPtrOutputWithContext(ctx context.Context) ManagedK8sRuntimeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedK8sRuntimeExec) *ManagedK8sRuntimeExec {
		return &v
	}).(ManagedK8sRuntimeExecPtrOutput)
}

// API version of the exec credential plugin
func (o ManagedK8sRuntimeExecOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedK8sRuntimeExec) string { return v.ApiVersion }).(pulumi.StringOutput)
}

// Arguments to pass when executing the command
func (o ManagedK8sRuntimeExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ManagedK8sRuntimeExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Command to execute
func (o ManagedK8sRuntimeExecOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedK8sRuntimeExec) string { return v.Command }).(pulumi.StringOutput)
}

// Environment variables to set when executing the command
func (o ManagedK8sRuntimeExecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v ManagedK8sRuntimeExec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

type ManagedK8sRuntimeExecPtrOutput struct{ *pulumi.OutputState }

func (ManagedK8sRuntimeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedK8sRuntimeExec)(nil)).Elem()
}

func (o ManagedK8sRuntimeExecPtrOutput) ToManagedK8sRuntimeExecPtrOutput() ManagedK8sRuntimeExecPtrOutput {
	return o
}

func (o ManagedK8sRuntimeExecPtrOutput) ToManagedK8sRuntimeExecPtrOutputWithContext(ctx context.Context) ManagedK8sRuntimeExecPtrOutput {
	return o
}

func (o ManagedK8sRuntimeExecPtrOutput) Elem() ManagedK8sRuntimeExecOutput {
	return o.ApplyT(func(v *ManagedK8sRuntimeExec) ManagedK8sRuntimeExec {
		if v != nil {
			return *v
		}
		var ret ManagedK8sRuntimeExec
		return ret
	}).(ManagedK8sRuntimeExecOutput)
}

// API version of the exec credential plugin
func (o ManagedK8sRuntimeExecPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedK8sRuntimeExec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Arguments to pass when executing the command
func (o ManagedK8sRuntimeExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedK8sRuntimeExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Command to execute
func (o ManagedK8sRuntimeExecPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedK8sRuntimeExec) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

// Environment variables to set when executing the command
func (o ManagedK8sRuntimeExecPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedK8sRuntimeExec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

type ReleaseChannelPolicy struct {
	// default environment variables for services in this Release Channel
	DefaultEnv map[string]ReleaseChannelPolicyDefaultEnv `pulumi:"defaultEnv"`
}

// ReleaseChannelPolicyInput is an input type that accepts ReleaseChannelPolicyArgs and ReleaseChannelPolicyOutput values.
// You can construct a concrete instance of `ReleaseChannelPolicyInput` via:
//
//	ReleaseChannelPolicyArgs{...}
type ReleaseChannelPolicyInput interface {
	pulumi.Input

	ToReleaseChannelPolicyOutput() ReleaseChannelPolicyOutput
	ToReleaseChannelPolicyOutputWithContext(context.Context) ReleaseChannelPolicyOutput
}

type ReleaseChannelPolicyArgs struct {
	// default environment variables for services in this Release Channel
	DefaultEnv ReleaseChannelPolicyDefaultEnvMapInput `pulumi:"defaultEnv"`
}

func (ReleaseChannelPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelPolicy)(nil)).Elem()
}

func (i ReleaseChannelPolicyArgs) ToReleaseChannelPolicyOutput() ReleaseChannelPolicyOutput {
	return i.ToReleaseChannelPolicyOutputWithContext(context.Background())
}

func (i ReleaseChannelPolicyArgs) ToReleaseChannelPolicyOutputWithContext(ctx context.Context) ReleaseChannelPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyOutput)
}

func (i ReleaseChannelPolicyArgs) ToReleaseChannelPolicyPtrOutput() ReleaseChannelPolicyPtrOutput {
	return i.ToReleaseChannelPolicyPtrOutputWithContext(context.Background())
}

func (i ReleaseChannelPolicyArgs) ToReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyOutput).ToReleaseChannelPolicyPtrOutputWithContext(ctx)
}

// ReleaseChannelPolicyPtrInput is an input type that accepts ReleaseChannelPolicyArgs, ReleaseChannelPolicyPtr and ReleaseChannelPolicyPtrOutput values.
// You can construct a concrete instance of `ReleaseChannelPolicyPtrInput` via:
//
//	        ReleaseChannelPolicyArgs{...}
//
//	or:
//
//	        nil
type ReleaseChannelPolicyPtrInput interface {
	pulumi.Input

	ToReleaseChannelPolicyPtrOutput() ReleaseChannelPolicyPtrOutput
	ToReleaseChannelPolicyPtrOutputWithContext(context.Context) ReleaseChannelPolicyPtrOutput
}

type releaseChannelPolicyPtrType ReleaseChannelPolicyArgs

func ReleaseChannelPolicyPtr(v *ReleaseChannelPolicyArgs) ReleaseChannelPolicyPtrInput {
	return (*releaseChannelPolicyPtrType)(v)
}

func (*releaseChannelPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelPolicy)(nil)).Elem()
}

func (i *releaseChannelPolicyPtrType) ToReleaseChannelPolicyPtrOutput() ReleaseChannelPolicyPtrOutput {
	return i.ToReleaseChannelPolicyPtrOutputWithContext(context.Background())
}

func (i *releaseChannelPolicyPtrType) ToReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyPtrOutput)
}

type ReleaseChannelPolicyOutput struct{ *pulumi.OutputState }

func (ReleaseChannelPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelPolicy)(nil)).Elem()
}

func (o ReleaseChannelPolicyOutput) ToReleaseChannelPolicyOutput() ReleaseChannelPolicyOutput {
	return o
}

func (o ReleaseChannelPolicyOutput) ToReleaseChannelPolicyOutputWithContext(ctx context.Context) ReleaseChannelPolicyOutput {
	return o
}

func (o ReleaseChannelPolicyOutput) ToReleaseChannelPolicyPtrOutput() ReleaseChannelPolicyPtrOutput {
	return o.ToReleaseChannelPolicyPtrOutputWithContext(context.Background())
}

func (o ReleaseChannelPolicyOutput) ToReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReleaseChannelPolicy) *ReleaseChannelPolicy {
		return &v
	}).(ReleaseChannelPolicyPtrOutput)
}

// default environment variables for services in this Release Channel
func (o ReleaseChannelPolicyOutput) DefaultEnv() ReleaseChannelPolicyDefaultEnvMapOutput {
	return o.ApplyT(func(v ReleaseChannelPolicy) map[string]ReleaseChannelPolicyDefaultEnv { return v.DefaultEnv }).(ReleaseChannelPolicyDefaultEnvMapOutput)
}

type ReleaseChannelPolicyPtrOutput struct{ *pulumi.OutputState }

func (ReleaseChannelPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelPolicy)(nil)).Elem()
}

func (o ReleaseChannelPolicyPtrOutput) ToReleaseChannelPolicyPtrOutput() ReleaseChannelPolicyPtrOutput {
	return o
}

func (o ReleaseChannelPolicyPtrOutput) ToReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyPtrOutput {
	return o
}

func (o ReleaseChannelPolicyPtrOutput) Elem() ReleaseChannelPolicyOutput {
	return o.ApplyT(func(v *ReleaseChannelPolicy) ReleaseChannelPolicy {
		if v != nil {
			return *v
		}
		var ret ReleaseChannelPolicy
		return ret
	}).(ReleaseChannelPolicyOutput)
}

// default environment variables for services in this Release Channel
func (o ReleaseChannelPolicyPtrOutput) DefaultEnv() ReleaseChannelPolicyDefaultEnvMapOutput {
	return o.ApplyT(func(v *ReleaseChannelPolicy) map[string]ReleaseChannelPolicyDefaultEnv {
		if v == nil {
			return nil
		}
		return v.DefaultEnv
	}).(ReleaseChannelPolicyDefaultEnvMapOutput)
}

type ReleaseChannelPolicyDefaultEnv struct {
	Secret *ReleaseChannelPolicyDefaultEnvSecret `pulumi:"secret"`
	Value  *string                               `pulumi:"value"`
}

// ReleaseChannelPolicyDefaultEnvInput is an input type that accepts ReleaseChannelPolicyDefaultEnvArgs and ReleaseChannelPolicyDefaultEnvOutput values.
// You can construct a concrete instance of `ReleaseChannelPolicyDefaultEnvInput` via:
//
//	ReleaseChannelPolicyDefaultEnvArgs{...}
type ReleaseChannelPolicyDefaultEnvInput interface {
	pulumi.Input

	ToReleaseChannelPolicyDefaultEnvOutput() ReleaseChannelPolicyDefaultEnvOutput
	ToReleaseChannelPolicyDefaultEnvOutputWithContext(context.Context) ReleaseChannelPolicyDefaultEnvOutput
}

type ReleaseChannelPolicyDefaultEnvArgs struct {
	Secret ReleaseChannelPolicyDefaultEnvSecretPtrInput `pulumi:"secret"`
	Value  pulumi.StringPtrInput                        `pulumi:"value"`
}

func (ReleaseChannelPolicyDefaultEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (i ReleaseChannelPolicyDefaultEnvArgs) ToReleaseChannelPolicyDefaultEnvOutput() ReleaseChannelPolicyDefaultEnvOutput {
	return i.ToReleaseChannelPolicyDefaultEnvOutputWithContext(context.Background())
}

func (i ReleaseChannelPolicyDefaultEnvArgs) ToReleaseChannelPolicyDefaultEnvOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyDefaultEnvOutput)
}

// ReleaseChannelPolicyDefaultEnvMapInput is an input type that accepts ReleaseChannelPolicyDefaultEnvMap and ReleaseChannelPolicyDefaultEnvMapOutput values.
// You can construct a concrete instance of `ReleaseChannelPolicyDefaultEnvMapInput` via:
//
//	ReleaseChannelPolicyDefaultEnvMap{ "key": ReleaseChannelPolicyDefaultEnvArgs{...} }
type ReleaseChannelPolicyDefaultEnvMapInput interface {
	pulumi.Input

	ToReleaseChannelPolicyDefaultEnvMapOutput() ReleaseChannelPolicyDefaultEnvMapOutput
	ToReleaseChannelPolicyDefaultEnvMapOutputWithContext(context.Context) ReleaseChannelPolicyDefaultEnvMapOutput
}

type ReleaseChannelPolicyDefaultEnvMap map[string]ReleaseChannelPolicyDefaultEnvInput

func (ReleaseChannelPolicyDefaultEnvMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (i ReleaseChannelPolicyDefaultEnvMap) ToReleaseChannelPolicyDefaultEnvMapOutput() ReleaseChannelPolicyDefaultEnvMapOutput {
	return i.ToReleaseChannelPolicyDefaultEnvMapOutputWithContext(context.Background())
}

func (i ReleaseChannelPolicyDefaultEnvMap) ToReleaseChannelPolicyDefaultEnvMapOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyDefaultEnvMapOutput)
}

type ReleaseChannelPolicyDefaultEnvOutput struct{ *pulumi.OutputState }

func (ReleaseChannelPolicyDefaultEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (o ReleaseChannelPolicyDefaultEnvOutput) ToReleaseChannelPolicyDefaultEnvOutput() ReleaseChannelPolicyDefaultEnvOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvOutput) ToReleaseChannelPolicyDefaultEnvOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvOutput) Secret() ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o.ApplyT(func(v ReleaseChannelPolicyDefaultEnv) *ReleaseChannelPolicyDefaultEnvSecret { return v.Secret }).(ReleaseChannelPolicyDefaultEnvSecretPtrOutput)
}

func (o ReleaseChannelPolicyDefaultEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelPolicyDefaultEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ReleaseChannelPolicyDefaultEnvMapOutput struct{ *pulumi.OutputState }

func (ReleaseChannelPolicyDefaultEnvMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (o ReleaseChannelPolicyDefaultEnvMapOutput) ToReleaseChannelPolicyDefaultEnvMapOutput() ReleaseChannelPolicyDefaultEnvMapOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvMapOutput) ToReleaseChannelPolicyDefaultEnvMapOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvMapOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvMapOutput) MapIndex(k pulumi.StringInput) ReleaseChannelPolicyDefaultEnvOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ReleaseChannelPolicyDefaultEnv {
		return vs[0].(map[string]ReleaseChannelPolicyDefaultEnv)[vs[1].(string)]
	}).(ReleaseChannelPolicyDefaultEnvOutput)
}

type ReleaseChannelPolicyDefaultEnvSecret struct {
	Key *string `pulumi:"key"`
	// Current application version
	Version *string `pulumi:"version"`
}

// ReleaseChannelPolicyDefaultEnvSecretInput is an input type that accepts ReleaseChannelPolicyDefaultEnvSecretArgs and ReleaseChannelPolicyDefaultEnvSecretOutput values.
// You can construct a concrete instance of `ReleaseChannelPolicyDefaultEnvSecretInput` via:
//
//	ReleaseChannelPolicyDefaultEnvSecretArgs{...}
type ReleaseChannelPolicyDefaultEnvSecretInput interface {
	pulumi.Input

	ToReleaseChannelPolicyDefaultEnvSecretOutput() ReleaseChannelPolicyDefaultEnvSecretOutput
	ToReleaseChannelPolicyDefaultEnvSecretOutputWithContext(context.Context) ReleaseChannelPolicyDefaultEnvSecretOutput
}

type ReleaseChannelPolicyDefaultEnvSecretArgs struct {
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Current application version
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ReleaseChannelPolicyDefaultEnvSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (i ReleaseChannelPolicyDefaultEnvSecretArgs) ToReleaseChannelPolicyDefaultEnvSecretOutput() ReleaseChannelPolicyDefaultEnvSecretOutput {
	return i.ToReleaseChannelPolicyDefaultEnvSecretOutputWithContext(context.Background())
}

func (i ReleaseChannelPolicyDefaultEnvSecretArgs) ToReleaseChannelPolicyDefaultEnvSecretOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyDefaultEnvSecretOutput)
}

func (i ReleaseChannelPolicyDefaultEnvSecretArgs) ToReleaseChannelPolicyDefaultEnvSecretPtrOutput() ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return i.ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Background())
}

func (i ReleaseChannelPolicyDefaultEnvSecretArgs) ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyDefaultEnvSecretOutput).ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx)
}

// ReleaseChannelPolicyDefaultEnvSecretPtrInput is an input type that accepts ReleaseChannelPolicyDefaultEnvSecretArgs, ReleaseChannelPolicyDefaultEnvSecretPtr and ReleaseChannelPolicyDefaultEnvSecretPtrOutput values.
// You can construct a concrete instance of `ReleaseChannelPolicyDefaultEnvSecretPtrInput` via:
//
//	        ReleaseChannelPolicyDefaultEnvSecretArgs{...}
//
//	or:
//
//	        nil
type ReleaseChannelPolicyDefaultEnvSecretPtrInput interface {
	pulumi.Input

	ToReleaseChannelPolicyDefaultEnvSecretPtrOutput() ReleaseChannelPolicyDefaultEnvSecretPtrOutput
	ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Context) ReleaseChannelPolicyDefaultEnvSecretPtrOutput
}

type releaseChannelPolicyDefaultEnvSecretPtrType ReleaseChannelPolicyDefaultEnvSecretArgs

func ReleaseChannelPolicyDefaultEnvSecretPtr(v *ReleaseChannelPolicyDefaultEnvSecretArgs) ReleaseChannelPolicyDefaultEnvSecretPtrInput {
	return (*releaseChannelPolicyDefaultEnvSecretPtrType)(v)
}

func (*releaseChannelPolicyDefaultEnvSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (i *releaseChannelPolicyDefaultEnvSecretPtrType) ToReleaseChannelPolicyDefaultEnvSecretPtrOutput() ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return i.ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Background())
}

func (i *releaseChannelPolicyDefaultEnvSecretPtrType) ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelPolicyDefaultEnvSecretPtrOutput)
}

type ReleaseChannelPolicyDefaultEnvSecretOutput struct{ *pulumi.OutputState }

func (ReleaseChannelPolicyDefaultEnvSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (o ReleaseChannelPolicyDefaultEnvSecretOutput) ToReleaseChannelPolicyDefaultEnvSecretOutput() ReleaseChannelPolicyDefaultEnvSecretOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvSecretOutput) ToReleaseChannelPolicyDefaultEnvSecretOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvSecretOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvSecretOutput) ToReleaseChannelPolicyDefaultEnvSecretPtrOutput() ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o.ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Background())
}

func (o ReleaseChannelPolicyDefaultEnvSecretOutput) ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReleaseChannelPolicyDefaultEnvSecret) *ReleaseChannelPolicyDefaultEnvSecret {
		return &v
	}).(ReleaseChannelPolicyDefaultEnvSecretPtrOutput)
}

func (o ReleaseChannelPolicyDefaultEnvSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelPolicyDefaultEnvSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Current application version
func (o ReleaseChannelPolicyDefaultEnvSecretOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelPolicyDefaultEnvSecret) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ReleaseChannelPolicyDefaultEnvSecretPtrOutput struct{ *pulumi.OutputState }

func (ReleaseChannelPolicyDefaultEnvSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (o ReleaseChannelPolicyDefaultEnvSecretPtrOutput) ToReleaseChannelPolicyDefaultEnvSecretPtrOutput() ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvSecretPtrOutput) ToReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) ReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o
}

func (o ReleaseChannelPolicyDefaultEnvSecretPtrOutput) Elem() ReleaseChannelPolicyDefaultEnvSecretOutput {
	return o.ApplyT(func(v *ReleaseChannelPolicyDefaultEnvSecret) ReleaseChannelPolicyDefaultEnvSecret {
		if v != nil {
			return *v
		}
		var ret ReleaseChannelPolicyDefaultEnvSecret
		return ret
	}).(ReleaseChannelPolicyDefaultEnvSecretOutput)
}

func (o ReleaseChannelPolicyDefaultEnvSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReleaseChannelPolicyDefaultEnvSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Current application version
func (o ReleaseChannelPolicyDefaultEnvSecretPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReleaseChannelPolicyDefaultEnvSecret) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ReleaseChannelRuntime struct {
	// Prefix used when naming ECS resources. Can only be set on an ECS Runtime.
	EcsPrefix *string `pulumi:"ecsPrefix"`
	// Optionally set a custom namespace. If not set, Prodvana will create and manage the namespace. If set, the namespace *must* already exist and Prodvana will not try to create or delete it. Can only be set on a Kubernetes Runtime.
	K8sNamespace *string `pulumi:"k8sNamespace"`
	// optional identifier for this runtime connection within this release channel
	Name *string `pulumi:"name"`
	// name of the a runtime
	Runtime *string `pulumi:"runtime"`
	// type of the runtime connection, one of (EXTENSION, LONG*LIVED*COMPUTE, UNKNOWN_CONNECTION)
	Type *string `pulumi:"type"`
}

// ReleaseChannelRuntimeInput is an input type that accepts ReleaseChannelRuntimeArgs and ReleaseChannelRuntimeOutput values.
// You can construct a concrete instance of `ReleaseChannelRuntimeInput` via:
//
//	ReleaseChannelRuntimeArgs{...}
type ReleaseChannelRuntimeInput interface {
	pulumi.Input

	ToReleaseChannelRuntimeOutput() ReleaseChannelRuntimeOutput
	ToReleaseChannelRuntimeOutputWithContext(context.Context) ReleaseChannelRuntimeOutput
}

type ReleaseChannelRuntimeArgs struct {
	// Prefix used when naming ECS resources. Can only be set on an ECS Runtime.
	EcsPrefix pulumi.StringPtrInput `pulumi:"ecsPrefix"`
	// Optionally set a custom namespace. If not set, Prodvana will create and manage the namespace. If set, the namespace *must* already exist and Prodvana will not try to create or delete it. Can only be set on a Kubernetes Runtime.
	K8sNamespace pulumi.StringPtrInput `pulumi:"k8sNamespace"`
	// optional identifier for this runtime connection within this release channel
	Name pulumi.StringPtrInput `pulumi:"name"`
	// name of the a runtime
	Runtime pulumi.StringPtrInput `pulumi:"runtime"`
	// type of the runtime connection, one of (EXTENSION, LONG*LIVED*COMPUTE, UNKNOWN_CONNECTION)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReleaseChannelRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelRuntime)(nil)).Elem()
}

func (i ReleaseChannelRuntimeArgs) ToReleaseChannelRuntimeOutput() ReleaseChannelRuntimeOutput {
	return i.ToReleaseChannelRuntimeOutputWithContext(context.Background())
}

func (i ReleaseChannelRuntimeArgs) ToReleaseChannelRuntimeOutputWithContext(ctx context.Context) ReleaseChannelRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelRuntimeOutput)
}

// ReleaseChannelRuntimeArrayInput is an input type that accepts ReleaseChannelRuntimeArray and ReleaseChannelRuntimeArrayOutput values.
// You can construct a concrete instance of `ReleaseChannelRuntimeArrayInput` via:
//
//	ReleaseChannelRuntimeArray{ ReleaseChannelRuntimeArgs{...} }
type ReleaseChannelRuntimeArrayInput interface {
	pulumi.Input

	ToReleaseChannelRuntimeArrayOutput() ReleaseChannelRuntimeArrayOutput
	ToReleaseChannelRuntimeArrayOutputWithContext(context.Context) ReleaseChannelRuntimeArrayOutput
}

type ReleaseChannelRuntimeArray []ReleaseChannelRuntimeInput

func (ReleaseChannelRuntimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseChannelRuntime)(nil)).Elem()
}

func (i ReleaseChannelRuntimeArray) ToReleaseChannelRuntimeArrayOutput() ReleaseChannelRuntimeArrayOutput {
	return i.ToReleaseChannelRuntimeArrayOutputWithContext(context.Background())
}

func (i ReleaseChannelRuntimeArray) ToReleaseChannelRuntimeArrayOutputWithContext(ctx context.Context) ReleaseChannelRuntimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseChannelRuntimeArrayOutput)
}

type ReleaseChannelRuntimeOutput struct{ *pulumi.OutputState }

func (ReleaseChannelRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseChannelRuntime)(nil)).Elem()
}

func (o ReleaseChannelRuntimeOutput) ToReleaseChannelRuntimeOutput() ReleaseChannelRuntimeOutput {
	return o
}

func (o ReleaseChannelRuntimeOutput) ToReleaseChannelRuntimeOutputWithContext(ctx context.Context) ReleaseChannelRuntimeOutput {
	return o
}

// Prefix used when naming ECS resources. Can only be set on an ECS Runtime.
func (o ReleaseChannelRuntimeOutput) EcsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelRuntime) *string { return v.EcsPrefix }).(pulumi.StringPtrOutput)
}

// Optionally set a custom namespace. If not set, Prodvana will create and manage the namespace. If set, the namespace *must* already exist and Prodvana will not try to create or delete it. Can only be set on a Kubernetes Runtime.
func (o ReleaseChannelRuntimeOutput) K8sNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelRuntime) *string { return v.K8sNamespace }).(pulumi.StringPtrOutput)
}

// optional identifier for this runtime connection within this release channel
func (o ReleaseChannelRuntimeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelRuntime) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// name of the a runtime
func (o ReleaseChannelRuntimeOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelRuntime) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

// type of the runtime connection, one of (EXTENSION, LONG*LIVED*COMPUTE, UNKNOWN_CONNECTION)
func (o ReleaseChannelRuntimeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseChannelRuntime) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReleaseChannelRuntimeArrayOutput struct{ *pulumi.OutputState }

func (ReleaseChannelRuntimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseChannelRuntime)(nil)).Elem()
}

func (o ReleaseChannelRuntimeArrayOutput) ToReleaseChannelRuntimeArrayOutput() ReleaseChannelRuntimeArrayOutput {
	return o
}

func (o ReleaseChannelRuntimeArrayOutput) ToReleaseChannelRuntimeArrayOutputWithContext(ctx context.Context) ReleaseChannelRuntimeArrayOutput {
	return o
}

func (o ReleaseChannelRuntimeArrayOutput) Index(i pulumi.IntInput) ReleaseChannelRuntimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleaseChannelRuntime {
		return vs[0].([]ReleaseChannelRuntime)[vs[1].(int)]
	}).(ReleaseChannelRuntimeOutput)
}

type GetReleaseChannelPolicy struct {
	// default environment variables for services in this Release Channel
	DefaultEnv map[string]GetReleaseChannelPolicyDefaultEnv `pulumi:"defaultEnv"`
}

// GetReleaseChannelPolicyInput is an input type that accepts GetReleaseChannelPolicyArgs and GetReleaseChannelPolicyOutput values.
// You can construct a concrete instance of `GetReleaseChannelPolicyInput` via:
//
//	GetReleaseChannelPolicyArgs{...}
type GetReleaseChannelPolicyInput interface {
	pulumi.Input

	ToGetReleaseChannelPolicyOutput() GetReleaseChannelPolicyOutput
	ToGetReleaseChannelPolicyOutputWithContext(context.Context) GetReleaseChannelPolicyOutput
}

type GetReleaseChannelPolicyArgs struct {
	// default environment variables for services in this Release Channel
	DefaultEnv GetReleaseChannelPolicyDefaultEnvMapInput `pulumi:"defaultEnv"`
}

func (GetReleaseChannelPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelPolicy)(nil)).Elem()
}

func (i GetReleaseChannelPolicyArgs) ToGetReleaseChannelPolicyOutput() GetReleaseChannelPolicyOutput {
	return i.ToGetReleaseChannelPolicyOutputWithContext(context.Background())
}

func (i GetReleaseChannelPolicyArgs) ToGetReleaseChannelPolicyOutputWithContext(ctx context.Context) GetReleaseChannelPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyOutput)
}

func (i GetReleaseChannelPolicyArgs) ToGetReleaseChannelPolicyPtrOutput() GetReleaseChannelPolicyPtrOutput {
	return i.ToGetReleaseChannelPolicyPtrOutputWithContext(context.Background())
}

func (i GetReleaseChannelPolicyArgs) ToGetReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyOutput).ToGetReleaseChannelPolicyPtrOutputWithContext(ctx)
}

// GetReleaseChannelPolicyPtrInput is an input type that accepts GetReleaseChannelPolicyArgs, GetReleaseChannelPolicyPtr and GetReleaseChannelPolicyPtrOutput values.
// You can construct a concrete instance of `GetReleaseChannelPolicyPtrInput` via:
//
//	        GetReleaseChannelPolicyArgs{...}
//
//	or:
//
//	        nil
type GetReleaseChannelPolicyPtrInput interface {
	pulumi.Input

	ToGetReleaseChannelPolicyPtrOutput() GetReleaseChannelPolicyPtrOutput
	ToGetReleaseChannelPolicyPtrOutputWithContext(context.Context) GetReleaseChannelPolicyPtrOutput
}

type getReleaseChannelPolicyPtrType GetReleaseChannelPolicyArgs

func GetReleaseChannelPolicyPtr(v *GetReleaseChannelPolicyArgs) GetReleaseChannelPolicyPtrInput {
	return (*getReleaseChannelPolicyPtrType)(v)
}

func (*getReleaseChannelPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetReleaseChannelPolicy)(nil)).Elem()
}

func (i *getReleaseChannelPolicyPtrType) ToGetReleaseChannelPolicyPtrOutput() GetReleaseChannelPolicyPtrOutput {
	return i.ToGetReleaseChannelPolicyPtrOutputWithContext(context.Background())
}

func (i *getReleaseChannelPolicyPtrType) ToGetReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyPtrOutput)
}

type GetReleaseChannelPolicyOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelPolicy)(nil)).Elem()
}

func (o GetReleaseChannelPolicyOutput) ToGetReleaseChannelPolicyOutput() GetReleaseChannelPolicyOutput {
	return o
}

func (o GetReleaseChannelPolicyOutput) ToGetReleaseChannelPolicyOutputWithContext(ctx context.Context) GetReleaseChannelPolicyOutput {
	return o
}

func (o GetReleaseChannelPolicyOutput) ToGetReleaseChannelPolicyPtrOutput() GetReleaseChannelPolicyPtrOutput {
	return o.ToGetReleaseChannelPolicyPtrOutputWithContext(context.Background())
}

func (o GetReleaseChannelPolicyOutput) ToGetReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetReleaseChannelPolicy) *GetReleaseChannelPolicy {
		return &v
	}).(GetReleaseChannelPolicyPtrOutput)
}

// default environment variables for services in this Release Channel
func (o GetReleaseChannelPolicyOutput) DefaultEnv() GetReleaseChannelPolicyDefaultEnvMapOutput {
	return o.ApplyT(func(v GetReleaseChannelPolicy) map[string]GetReleaseChannelPolicyDefaultEnv { return v.DefaultEnv }).(GetReleaseChannelPolicyDefaultEnvMapOutput)
}

type GetReleaseChannelPolicyPtrOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetReleaseChannelPolicy)(nil)).Elem()
}

func (o GetReleaseChannelPolicyPtrOutput) ToGetReleaseChannelPolicyPtrOutput() GetReleaseChannelPolicyPtrOutput {
	return o
}

func (o GetReleaseChannelPolicyPtrOutput) ToGetReleaseChannelPolicyPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyPtrOutput {
	return o
}

func (o GetReleaseChannelPolicyPtrOutput) Elem() GetReleaseChannelPolicyOutput {
	return o.ApplyT(func(v *GetReleaseChannelPolicy) GetReleaseChannelPolicy {
		if v != nil {
			return *v
		}
		var ret GetReleaseChannelPolicy
		return ret
	}).(GetReleaseChannelPolicyOutput)
}

// default environment variables for services in this Release Channel
func (o GetReleaseChannelPolicyPtrOutput) DefaultEnv() GetReleaseChannelPolicyDefaultEnvMapOutput {
	return o.ApplyT(func(v *GetReleaseChannelPolicy) map[string]GetReleaseChannelPolicyDefaultEnv {
		if v == nil {
			return nil
		}
		return v.DefaultEnv
	}).(GetReleaseChannelPolicyDefaultEnvMapOutput)
}

type GetReleaseChannelPolicyDefaultEnv struct {
	Secret *GetReleaseChannelPolicyDefaultEnvSecret `pulumi:"secret"`
	Value  *string                                  `pulumi:"value"`
}

// GetReleaseChannelPolicyDefaultEnvInput is an input type that accepts GetReleaseChannelPolicyDefaultEnvArgs and GetReleaseChannelPolicyDefaultEnvOutput values.
// You can construct a concrete instance of `GetReleaseChannelPolicyDefaultEnvInput` via:
//
//	GetReleaseChannelPolicyDefaultEnvArgs{...}
type GetReleaseChannelPolicyDefaultEnvInput interface {
	pulumi.Input

	ToGetReleaseChannelPolicyDefaultEnvOutput() GetReleaseChannelPolicyDefaultEnvOutput
	ToGetReleaseChannelPolicyDefaultEnvOutputWithContext(context.Context) GetReleaseChannelPolicyDefaultEnvOutput
}

type GetReleaseChannelPolicyDefaultEnvArgs struct {
	Secret GetReleaseChannelPolicyDefaultEnvSecretPtrInput `pulumi:"secret"`
	Value  pulumi.StringPtrInput                           `pulumi:"value"`
}

func (GetReleaseChannelPolicyDefaultEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (i GetReleaseChannelPolicyDefaultEnvArgs) ToGetReleaseChannelPolicyDefaultEnvOutput() GetReleaseChannelPolicyDefaultEnvOutput {
	return i.ToGetReleaseChannelPolicyDefaultEnvOutputWithContext(context.Background())
}

func (i GetReleaseChannelPolicyDefaultEnvArgs) ToGetReleaseChannelPolicyDefaultEnvOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyDefaultEnvOutput)
}

// GetReleaseChannelPolicyDefaultEnvMapInput is an input type that accepts GetReleaseChannelPolicyDefaultEnvMap and GetReleaseChannelPolicyDefaultEnvMapOutput values.
// You can construct a concrete instance of `GetReleaseChannelPolicyDefaultEnvMapInput` via:
//
//	GetReleaseChannelPolicyDefaultEnvMap{ "key": GetReleaseChannelPolicyDefaultEnvArgs{...} }
type GetReleaseChannelPolicyDefaultEnvMapInput interface {
	pulumi.Input

	ToGetReleaseChannelPolicyDefaultEnvMapOutput() GetReleaseChannelPolicyDefaultEnvMapOutput
	ToGetReleaseChannelPolicyDefaultEnvMapOutputWithContext(context.Context) GetReleaseChannelPolicyDefaultEnvMapOutput
}

type GetReleaseChannelPolicyDefaultEnvMap map[string]GetReleaseChannelPolicyDefaultEnvInput

func (GetReleaseChannelPolicyDefaultEnvMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (i GetReleaseChannelPolicyDefaultEnvMap) ToGetReleaseChannelPolicyDefaultEnvMapOutput() GetReleaseChannelPolicyDefaultEnvMapOutput {
	return i.ToGetReleaseChannelPolicyDefaultEnvMapOutputWithContext(context.Background())
}

func (i GetReleaseChannelPolicyDefaultEnvMap) ToGetReleaseChannelPolicyDefaultEnvMapOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyDefaultEnvMapOutput)
}

type GetReleaseChannelPolicyDefaultEnvOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelPolicyDefaultEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (o GetReleaseChannelPolicyDefaultEnvOutput) ToGetReleaseChannelPolicyDefaultEnvOutput() GetReleaseChannelPolicyDefaultEnvOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvOutput) ToGetReleaseChannelPolicyDefaultEnvOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvOutput) Secret() GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o.ApplyT(func(v GetReleaseChannelPolicyDefaultEnv) *GetReleaseChannelPolicyDefaultEnvSecret { return v.Secret }).(GetReleaseChannelPolicyDefaultEnvSecretPtrOutput)
}

func (o GetReleaseChannelPolicyDefaultEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleaseChannelPolicyDefaultEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetReleaseChannelPolicyDefaultEnvMapOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelPolicyDefaultEnvMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetReleaseChannelPolicyDefaultEnv)(nil)).Elem()
}

func (o GetReleaseChannelPolicyDefaultEnvMapOutput) ToGetReleaseChannelPolicyDefaultEnvMapOutput() GetReleaseChannelPolicyDefaultEnvMapOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvMapOutput) ToGetReleaseChannelPolicyDefaultEnvMapOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvMapOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvMapOutput) MapIndex(k pulumi.StringInput) GetReleaseChannelPolicyDefaultEnvOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetReleaseChannelPolicyDefaultEnv {
		return vs[0].(map[string]GetReleaseChannelPolicyDefaultEnv)[vs[1].(string)]
	}).(GetReleaseChannelPolicyDefaultEnvOutput)
}

type GetReleaseChannelPolicyDefaultEnvSecret struct {
	Key *string `pulumi:"key"`
	// Current application version
	Version *string `pulumi:"version"`
}

// GetReleaseChannelPolicyDefaultEnvSecretInput is an input type that accepts GetReleaseChannelPolicyDefaultEnvSecretArgs and GetReleaseChannelPolicyDefaultEnvSecretOutput values.
// You can construct a concrete instance of `GetReleaseChannelPolicyDefaultEnvSecretInput` via:
//
//	GetReleaseChannelPolicyDefaultEnvSecretArgs{...}
type GetReleaseChannelPolicyDefaultEnvSecretInput interface {
	pulumi.Input

	ToGetReleaseChannelPolicyDefaultEnvSecretOutput() GetReleaseChannelPolicyDefaultEnvSecretOutput
	ToGetReleaseChannelPolicyDefaultEnvSecretOutputWithContext(context.Context) GetReleaseChannelPolicyDefaultEnvSecretOutput
}

type GetReleaseChannelPolicyDefaultEnvSecretArgs struct {
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Current application version
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetReleaseChannelPolicyDefaultEnvSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (i GetReleaseChannelPolicyDefaultEnvSecretArgs) ToGetReleaseChannelPolicyDefaultEnvSecretOutput() GetReleaseChannelPolicyDefaultEnvSecretOutput {
	return i.ToGetReleaseChannelPolicyDefaultEnvSecretOutputWithContext(context.Background())
}

func (i GetReleaseChannelPolicyDefaultEnvSecretArgs) ToGetReleaseChannelPolicyDefaultEnvSecretOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyDefaultEnvSecretOutput)
}

func (i GetReleaseChannelPolicyDefaultEnvSecretArgs) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutput() GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return i.ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Background())
}

func (i GetReleaseChannelPolicyDefaultEnvSecretArgs) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyDefaultEnvSecretOutput).ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx)
}

// GetReleaseChannelPolicyDefaultEnvSecretPtrInput is an input type that accepts GetReleaseChannelPolicyDefaultEnvSecretArgs, GetReleaseChannelPolicyDefaultEnvSecretPtr and GetReleaseChannelPolicyDefaultEnvSecretPtrOutput values.
// You can construct a concrete instance of `GetReleaseChannelPolicyDefaultEnvSecretPtrInput` via:
//
//	        GetReleaseChannelPolicyDefaultEnvSecretArgs{...}
//
//	or:
//
//	        nil
type GetReleaseChannelPolicyDefaultEnvSecretPtrInput interface {
	pulumi.Input

	ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutput() GetReleaseChannelPolicyDefaultEnvSecretPtrOutput
	ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Context) GetReleaseChannelPolicyDefaultEnvSecretPtrOutput
}

type getReleaseChannelPolicyDefaultEnvSecretPtrType GetReleaseChannelPolicyDefaultEnvSecretArgs

func GetReleaseChannelPolicyDefaultEnvSecretPtr(v *GetReleaseChannelPolicyDefaultEnvSecretArgs) GetReleaseChannelPolicyDefaultEnvSecretPtrInput {
	return (*getReleaseChannelPolicyDefaultEnvSecretPtrType)(v)
}

func (*getReleaseChannelPolicyDefaultEnvSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (i *getReleaseChannelPolicyDefaultEnvSecretPtrType) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutput() GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return i.ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Background())
}

func (i *getReleaseChannelPolicyDefaultEnvSecretPtrType) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelPolicyDefaultEnvSecretPtrOutput)
}

type GetReleaseChannelPolicyDefaultEnvSecretOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelPolicyDefaultEnvSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (o GetReleaseChannelPolicyDefaultEnvSecretOutput) ToGetReleaseChannelPolicyDefaultEnvSecretOutput() GetReleaseChannelPolicyDefaultEnvSecretOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvSecretOutput) ToGetReleaseChannelPolicyDefaultEnvSecretOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvSecretOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvSecretOutput) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutput() GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o.ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(context.Background())
}

func (o GetReleaseChannelPolicyDefaultEnvSecretOutput) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetReleaseChannelPolicyDefaultEnvSecret) *GetReleaseChannelPolicyDefaultEnvSecret {
		return &v
	}).(GetReleaseChannelPolicyDefaultEnvSecretPtrOutput)
}

func (o GetReleaseChannelPolicyDefaultEnvSecretOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleaseChannelPolicyDefaultEnvSecret) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Current application version
func (o GetReleaseChannelPolicyDefaultEnvSecretOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleaseChannelPolicyDefaultEnvSecret) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetReleaseChannelPolicyDefaultEnvSecretPtrOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelPolicyDefaultEnvSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetReleaseChannelPolicyDefaultEnvSecret)(nil)).Elem()
}

func (o GetReleaseChannelPolicyDefaultEnvSecretPtrOutput) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutput() GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvSecretPtrOutput) ToGetReleaseChannelPolicyDefaultEnvSecretPtrOutputWithContext(ctx context.Context) GetReleaseChannelPolicyDefaultEnvSecretPtrOutput {
	return o
}

func (o GetReleaseChannelPolicyDefaultEnvSecretPtrOutput) Elem() GetReleaseChannelPolicyDefaultEnvSecretOutput {
	return o.ApplyT(func(v *GetReleaseChannelPolicyDefaultEnvSecret) GetReleaseChannelPolicyDefaultEnvSecret {
		if v != nil {
			return *v
		}
		var ret GetReleaseChannelPolicyDefaultEnvSecret
		return ret
	}).(GetReleaseChannelPolicyDefaultEnvSecretOutput)
}

func (o GetReleaseChannelPolicyDefaultEnvSecretPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetReleaseChannelPolicyDefaultEnvSecret) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Current application version
func (o GetReleaseChannelPolicyDefaultEnvSecretPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetReleaseChannelPolicyDefaultEnvSecret) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type GetReleaseChannelRuntime struct {
	// ECS prefix
	EcsPrefix string `pulumi:"ecsPrefix"`
	// Kubernetes namespace
	K8sNamespace string `pulumi:"k8sNamespace"`
	// optional identifier for this runtime connection within this release channel
	Name string `pulumi:"name"`
	// name of the a runtime
	Runtime *string `pulumi:"runtime"`
	// type of the runtime connection, one of (EXTENSION, LONG*LIVED*COMPUTE, UNKNOWN_CONNECTION)
	Type string `pulumi:"type"`
}

// GetReleaseChannelRuntimeInput is an input type that accepts GetReleaseChannelRuntimeArgs and GetReleaseChannelRuntimeOutput values.
// You can construct a concrete instance of `GetReleaseChannelRuntimeInput` via:
//
//	GetReleaseChannelRuntimeArgs{...}
type GetReleaseChannelRuntimeInput interface {
	pulumi.Input

	ToGetReleaseChannelRuntimeOutput() GetReleaseChannelRuntimeOutput
	ToGetReleaseChannelRuntimeOutputWithContext(context.Context) GetReleaseChannelRuntimeOutput
}

type GetReleaseChannelRuntimeArgs struct {
	// ECS prefix
	EcsPrefix pulumi.StringInput `pulumi:"ecsPrefix"`
	// Kubernetes namespace
	K8sNamespace pulumi.StringInput `pulumi:"k8sNamespace"`
	// optional identifier for this runtime connection within this release channel
	Name pulumi.StringInput `pulumi:"name"`
	// name of the a runtime
	Runtime pulumi.StringPtrInput `pulumi:"runtime"`
	// type of the runtime connection, one of (EXTENSION, LONG*LIVED*COMPUTE, UNKNOWN_CONNECTION)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReleaseChannelRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelRuntime)(nil)).Elem()
}

func (i GetReleaseChannelRuntimeArgs) ToGetReleaseChannelRuntimeOutput() GetReleaseChannelRuntimeOutput {
	return i.ToGetReleaseChannelRuntimeOutputWithContext(context.Background())
}

func (i GetReleaseChannelRuntimeArgs) ToGetReleaseChannelRuntimeOutputWithContext(ctx context.Context) GetReleaseChannelRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelRuntimeOutput)
}

// GetReleaseChannelRuntimeArrayInput is an input type that accepts GetReleaseChannelRuntimeArray and GetReleaseChannelRuntimeArrayOutput values.
// You can construct a concrete instance of `GetReleaseChannelRuntimeArrayInput` via:
//
//	GetReleaseChannelRuntimeArray{ GetReleaseChannelRuntimeArgs{...} }
type GetReleaseChannelRuntimeArrayInput interface {
	pulumi.Input

	ToGetReleaseChannelRuntimeArrayOutput() GetReleaseChannelRuntimeArrayOutput
	ToGetReleaseChannelRuntimeArrayOutputWithContext(context.Context) GetReleaseChannelRuntimeArrayOutput
}

type GetReleaseChannelRuntimeArray []GetReleaseChannelRuntimeInput

func (GetReleaseChannelRuntimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleaseChannelRuntime)(nil)).Elem()
}

func (i GetReleaseChannelRuntimeArray) ToGetReleaseChannelRuntimeArrayOutput() GetReleaseChannelRuntimeArrayOutput {
	return i.ToGetReleaseChannelRuntimeArrayOutputWithContext(context.Background())
}

func (i GetReleaseChannelRuntimeArray) ToGetReleaseChannelRuntimeArrayOutputWithContext(ctx context.Context) GetReleaseChannelRuntimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetReleaseChannelRuntimeArrayOutput)
}

type GetReleaseChannelRuntimeOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReleaseChannelRuntime)(nil)).Elem()
}

func (o GetReleaseChannelRuntimeOutput) ToGetReleaseChannelRuntimeOutput() GetReleaseChannelRuntimeOutput {
	return o
}

func (o GetReleaseChannelRuntimeOutput) ToGetReleaseChannelRuntimeOutputWithContext(ctx context.Context) GetReleaseChannelRuntimeOutput {
	return o
}

// ECS prefix
func (o GetReleaseChannelRuntimeOutput) EcsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleaseChannelRuntime) string { return v.EcsPrefix }).(pulumi.StringOutput)
}

// Kubernetes namespace
func (o GetReleaseChannelRuntimeOutput) K8sNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleaseChannelRuntime) string { return v.K8sNamespace }).(pulumi.StringOutput)
}

// optional identifier for this runtime connection within this release channel
func (o GetReleaseChannelRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleaseChannelRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// name of the a runtime
func (o GetReleaseChannelRuntimeOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReleaseChannelRuntime) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

// type of the runtime connection, one of (EXTENSION, LONG*LIVED*COMPUTE, UNKNOWN_CONNECTION)
func (o GetReleaseChannelRuntimeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReleaseChannelRuntime) string { return v.Type }).(pulumi.StringOutput)
}

type GetReleaseChannelRuntimeArrayOutput struct{ *pulumi.OutputState }

func (GetReleaseChannelRuntimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetReleaseChannelRuntime)(nil)).Elem()
}

func (o GetReleaseChannelRuntimeArrayOutput) ToGetReleaseChannelRuntimeArrayOutput() GetReleaseChannelRuntimeArrayOutput {
	return o
}

func (o GetReleaseChannelRuntimeArrayOutput) ToGetReleaseChannelRuntimeArrayOutputWithContext(ctx context.Context) GetReleaseChannelRuntimeArrayOutput {
	return o
}

func (o GetReleaseChannelRuntimeArrayOutput) Index(i pulumi.IntInput) GetReleaseChannelRuntimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetReleaseChannelRuntime {
		return vs[0].([]GetReleaseChannelRuntime)[vs[1].(int)]
	}).(GetReleaseChannelRuntimeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedK8sRuntimeExecInput)(nil)).Elem(), ManagedK8sRuntimeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedK8sRuntimeExecPtrInput)(nil)).Elem(), ManagedK8sRuntimeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelPolicyInput)(nil)).Elem(), ReleaseChannelPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelPolicyPtrInput)(nil)).Elem(), ReleaseChannelPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelPolicyDefaultEnvInput)(nil)).Elem(), ReleaseChannelPolicyDefaultEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelPolicyDefaultEnvMapInput)(nil)).Elem(), ReleaseChannelPolicyDefaultEnvMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelPolicyDefaultEnvSecretInput)(nil)).Elem(), ReleaseChannelPolicyDefaultEnvSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelPolicyDefaultEnvSecretPtrInput)(nil)).Elem(), ReleaseChannelPolicyDefaultEnvSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelRuntimeInput)(nil)).Elem(), ReleaseChannelRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseChannelRuntimeArrayInput)(nil)).Elem(), ReleaseChannelRuntimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelPolicyInput)(nil)).Elem(), GetReleaseChannelPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelPolicyPtrInput)(nil)).Elem(), GetReleaseChannelPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnvInput)(nil)).Elem(), GetReleaseChannelPolicyDefaultEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnvMapInput)(nil)).Elem(), GetReleaseChannelPolicyDefaultEnvMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnvSecretInput)(nil)).Elem(), GetReleaseChannelPolicyDefaultEnvSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelPolicyDefaultEnvSecretPtrInput)(nil)).Elem(), GetReleaseChannelPolicyDefaultEnvSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelRuntimeInput)(nil)).Elem(), GetReleaseChannelRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetReleaseChannelRuntimeArrayInput)(nil)).Elem(), GetReleaseChannelRuntimeArray{})
	pulumi.RegisterOutputType(ManagedK8sRuntimeExecOutput{})
	pulumi.RegisterOutputType(ManagedK8sRuntimeExecPtrOutput{})
	pulumi.RegisterOutputType(ReleaseChannelPolicyOutput{})
	pulumi.RegisterOutputType(ReleaseChannelPolicyPtrOutput{})
	pulumi.RegisterOutputType(ReleaseChannelPolicyDefaultEnvOutput{})
	pulumi.RegisterOutputType(ReleaseChannelPolicyDefaultEnvMapOutput{})
	pulumi.RegisterOutputType(ReleaseChannelPolicyDefaultEnvSecretOutput{})
	pulumi.RegisterOutputType(ReleaseChannelPolicyDefaultEnvSecretPtrOutput{})
	pulumi.RegisterOutputType(ReleaseChannelRuntimeOutput{})
	pulumi.RegisterOutputType(ReleaseChannelRuntimeArrayOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelPolicyOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelPolicyPtrOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelPolicyDefaultEnvOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelPolicyDefaultEnvMapOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelPolicyDefaultEnvSecretOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelPolicyDefaultEnvSecretPtrOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelRuntimeOutput{})
	pulumi.RegisterOutputType(GetReleaseChannelRuntimeArrayOutput{})
}
