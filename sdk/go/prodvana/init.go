// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prodvana

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "prodvana:index/application:Application":
		r = &Application{}
	case "prodvana:index/k8sRuntime:K8sRuntime":
		r = &K8sRuntime{}
	case "prodvana:index/managedK8sRuntime:ManagedK8sRuntime":
		r = &ManagedK8sRuntime{}
	case "prodvana:index/releaseChannel:ReleaseChannel":
		r = &ReleaseChannel{}
	case "prodvana:index/runtimeLink:RuntimeLink":
		r = &RuntimeLink{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:prodvana" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"prodvana",
		"index/application",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"prodvana",
		"index/k8sRuntime",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"prodvana",
		"index/managedK8sRuntime",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"prodvana",
		"index/releaseChannel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"prodvana",
		"index/runtimeLink",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"prodvana",
		&pkg{version},
	)
}
