// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package prodvana

import (
	"context"
	"reflect"

	"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Prodvana Release Channel
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/prodvana/pulumi-prodvana/sdk/go/prodvana"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := prodvana.LookupReleaseChannel(ctx, &prodvana.LookupReleaseChannelArgs{
//				Application: "my-app",
//				Name:        "my-rc",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupReleaseChannel(ctx *pulumi.Context, args *LookupReleaseChannelArgs, opts ...pulumi.InvokeOption) (*LookupReleaseChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReleaseChannelResult
	err := ctx.Invoke("prodvana:index/getReleaseChannel:getReleaseChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReleaseChannel.
type LookupReleaseChannelArgs struct {
	// Name of the Application this Release Channel belongs to
	Application string `pulumi:"application"`
	// Release Channel name
	Name string `pulumi:"name"`
	// Release Channel policy applied to all services
	Policy *GetReleaseChannelPolicy `pulumi:"policy"`
}

// A collection of values returned by getReleaseChannel.
type LookupReleaseChannelResult struct {
	// Name of the Application this Release Channel belongs to
	Application string `pulumi:"application"`
	// Release channel identifier
	Id string `pulumi:"id"`
	// Release Channel name
	Name string `pulumi:"name"`
	// Release Channel policy applied to all services
	Policy GetReleaseChannelPolicy `pulumi:"policy"`
	// Release Channel policy applied to all services
	Runtimes []GetReleaseChannelRuntime `pulumi:"runtimes"`
	// Current application version
	Version string `pulumi:"version"`
}

func LookupReleaseChannelOutput(ctx *pulumi.Context, args LookupReleaseChannelOutputArgs, opts ...pulumi.InvokeOption) LookupReleaseChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReleaseChannelResult, error) {
			args := v.(LookupReleaseChannelArgs)
			r, err := LookupReleaseChannel(ctx, &args, opts...)
			var s LookupReleaseChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReleaseChannelResultOutput)
}

// A collection of arguments for invoking getReleaseChannel.
type LookupReleaseChannelOutputArgs struct {
	// Name of the Application this Release Channel belongs to
	Application pulumi.StringInput `pulumi:"application"`
	// Release Channel name
	Name pulumi.StringInput `pulumi:"name"`
	// Release Channel policy applied to all services
	Policy GetReleaseChannelPolicyPtrInput `pulumi:"policy"`
}

func (LookupReleaseChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReleaseChannelArgs)(nil)).Elem()
}

// A collection of values returned by getReleaseChannel.
type LookupReleaseChannelResultOutput struct{ *pulumi.OutputState }

func (LookupReleaseChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReleaseChannelResult)(nil)).Elem()
}

func (o LookupReleaseChannelResultOutput) ToLookupReleaseChannelResultOutput() LookupReleaseChannelResultOutput {
	return o
}

func (o LookupReleaseChannelResultOutput) ToLookupReleaseChannelResultOutputWithContext(ctx context.Context) LookupReleaseChannelResultOutput {
	return o
}

// Name of the Application this Release Channel belongs to
func (o LookupReleaseChannelResultOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReleaseChannelResult) string { return v.Application }).(pulumi.StringOutput)
}

// Release channel identifier
func (o LookupReleaseChannelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReleaseChannelResult) string { return v.Id }).(pulumi.StringOutput)
}

// Release Channel name
func (o LookupReleaseChannelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReleaseChannelResult) string { return v.Name }).(pulumi.StringOutput)
}

// Release Channel policy applied to all services
func (o LookupReleaseChannelResultOutput) Policy() GetReleaseChannelPolicyOutput {
	return o.ApplyT(func(v LookupReleaseChannelResult) GetReleaseChannelPolicy { return v.Policy }).(GetReleaseChannelPolicyOutput)
}

// Release Channel policy applied to all services
func (o LookupReleaseChannelResultOutput) Runtimes() GetReleaseChannelRuntimeArrayOutput {
	return o.ApplyT(func(v LookupReleaseChannelResult) []GetReleaseChannelRuntime { return v.Runtimes }).(GetReleaseChannelRuntimeArrayOutput)
}

// Current application version
func (o LookupReleaseChannelResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReleaseChannelResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReleaseChannelResultOutput{})
}
