// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Prodvana
{
    /// <summary>
    /// (Alpha! This feature is still in progress.)
    /// A `runtime_link` resource represents a successfully linked runtime.
    /// This is most useful for Kubernetes runtimes -- the agent must be installed and registered with the Prodvana service before the runtime can be used.
    /// Pair this with an explicit `depends_on` block ensures that the runtime is ready before attempting to use it. See the example below.
    /// </summary>
    [ProdvanaResourceType("prodvana:index/runtimeLink:RuntimeLink")]
    public partial class RuntimeLink : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the runtime to wait for linking.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`
        /// </summary>
        [Output("timeout")]
        public Output<string> Timeout { get; private set; } = null!;


        /// <summary>
        /// Create a RuntimeLink resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuntimeLink(string name, RuntimeLinkArgs? args = null, CustomResourceOptions? options = null)
            : base("prodvana:index/runtimeLink:RuntimeLink", name, args ?? new RuntimeLinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuntimeLink(string name, Input<string> id, RuntimeLinkState? state = null, CustomResourceOptions? options = null)
            : base("prodvana:index/runtimeLink:RuntimeLink", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuntimeLink resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuntimeLink Get(string name, Input<string> id, RuntimeLinkState? state = null, CustomResourceOptions? options = null)
        {
            return new RuntimeLink(name, id, state, options);
        }
    }

    public sealed class RuntimeLinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the runtime to wait for linking.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        public RuntimeLinkArgs()
        {
        }
        public static new RuntimeLinkArgs Empty => new RuntimeLinkArgs();
    }

    public sealed class RuntimeLinkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the runtime to wait for linking.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// How long to wait for the runtime linking to complete. A valid Go duration string, e.g. `10m` or `1h`. Defaults to `10m`
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        public RuntimeLinkState()
        {
        }
        public static new RuntimeLinkState Empty => new RuntimeLinkState();
    }
}
